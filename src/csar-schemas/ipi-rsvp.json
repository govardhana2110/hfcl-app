{
  "title": "ipi-rsvp",
  "description": "Resource Reservation Protocol",
  "type": "object",
  "properties": {
    "ipi-rsvp:rsvp-te": {
      "description": "rsvp configurations",
      "readOnly": false,
      "type": "object",
      "properties": {
        "admin-group": {
          "description": "list for admin group",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the admin group",
                "readOnly": true,
                "path": "../state/name",
                "type": "string",
                "mandatory": false
              },
              "state": {
                "description": "state parameters related to admin group",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the admin group",
                    "readOnly": true,
                    "minLength": 1,
                    "maxLength": 1965,
                    "pattern": "[^?' =,>|]+",
                    "type": "string",
                    "mandatory": false
                  },
                  "value": {
                    "description": "Value of the admin group",
                    "readOnly": true,
                    "type": "number",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "mandatory": false
                  }
                }
              }
            },
            "keyFields": [
              "name"
            ]
          }
        },
        "dste": {
          "description": "list for diff serv parametrs",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "class-type-number": {
                "description": "DiffServ Class Type Number",
                "readOnly": true,
                "path": "../state/class-type-number",
                "type": "string",
                "mandatory": false
              },
              "state": {
                "description": "state parameters related to diff serv",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "class-type-name": {
                    "description": "DiffServ Class Type Name",
                    "readOnly": true,
                    "minLength": 1,
                    "maxLength": 1965,
                    "pattern": "[^?' =,>|]+",
                    "type": "string",
                    "mandatory": false
                  },
                  "class-type-number": {
                    "description": "DiffServ Class Type Number",
                    "readOnly": true,
                    "type": "number",
                    "minimum": 0,
                    "maximum": 255,
                    "mandatory": false
                  },
                  "te-class-type-name": {
                    "description": "DiffServ Traffic Enginnering Class Type Name",
                    "readOnly": true,
                    "minLength": 1,
                    "maxLength": 1965,
                    "pattern": "[^?' =,>|]+",
                    "type": "string",
                    "mandatory": false
                  },
                  "te-class-type-number": {
                    "description": "DiffServ Traffic Enginnering Class Type Number",
                    "readOnly": true,
                    "type": "number",
                    "minimum": 0,
                    "maximum": 255,
                    "mandatory": false
                  },
                  "te-priority": {
                    "description": "Priority of diffserv traffic engineering",
                    "readOnly": true,
                    "type": "number",
                    "minimum": 0,
                    "maximum": 255,
                    "mandatory": false
                  },
                  "dste-enable-status": {
                    "description": "Status of diffserv traffic engineering",
                    "readOnly": true,
                    "enum": [
                      "disable",
                      "enable"
                    ],
                    "mandatory": false
                  }
                }
              }
            },
            "keyFields": [
              "class-type-number"
            ]
          }
        },
        "debug": {
          "description": "container to enable RSVP debug",
          "readOnly": false,
          "type": "object",
          "properties": {
            "config": {
              "description": "configuration container for RSVP debug messages",
              "readOnly": false,
              "type": "object",
              "properties": {
                "options": {
                  "description": "Use this attribute to enable all debugging options for an RSVP daemon. Enable RSVP debugs at configuration mode",
                  "readOnly": false,
                  "type": "string",
                  "bits": {
                    "events": "0",
                    "packet": "1",
                    "packet-in": "2",
                    "packet-out": "3",
                    "hexdump": "4",
                    "nsm": "5",
                    "cspf": "6",
                    "fsm-egress": "7",
                    "fsm-transit-downstream": "8",
                    "fsm-transit-upstream": "9",
                    "fsm-ingress": "10",
                    "rib": "11",
                    "neighbor": "12"
                  },
                  "mandatory": false
                }
              }
            },
            "state": {
              "description": "state parameters related to RSVP debug messages",
              "readOnly": true,
              "type": "object",
              "properties": {
                "options": {
                  "description": "Use this attribute to enable all debugging options for an RSVP daemon. Enable RSVP debugs at configuration mode",
                  "readOnly": true,
                  "type": "string",
                  "bits": {
                    "events": "0",
                    "packet": "1",
                    "packet-in": "2",
                    "packet-out": "3",
                    "hexdump": "4",
                    "nsm": "5",
                    "cspf": "6",
                    "fsm-egress": "7",
                    "fsm-transit-downstream": "8",
                    "fsm-transit-upstream": "9",
                    "fsm-ingress": "10",
                    "rib": "11",
                    "neighbor": "12"
                  },
                  "mandatory": false
                },
                "terminal-debug-status": {
                  "description": "Use this attribute to retrieve terminal debug options enabled for RSVP",
                  "readOnly": true,
                  "type": "string",
                  "bits": {
                    "events": "0",
                    "packet": "1",
                    "packet-in": "2",
                    "packet-out": "3",
                    "hexdump": "4",
                    "nsm": "5",
                    "cspf": "6",
                    "fsm-egress": "7",
                    "fsm-transit-downstream": "8",
                    "fsm-transit-upstream": "9",
                    "fsm-ingress": "10",
                    "rib": "11",
                    "neighbor": "12"
                  },
                  "mandatory": false
                }
              }
            }
          }
        },
        "snmp-configuration": {
          "description": "container to configure snmp",
          "readOnly": false,
          "type": "object",
          "properties": {
            "config": {
              "description": "configuration container for snmp",
              "readOnly": false,
              "type": "object",
              "properties": {
                "enable-rsvp-trap": {
                  "description": "Use this attribute to enable/disable the rsvp trap",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                }
              }
            },
            "state": {
              "description": "state parameters related to RSVP snmp",
              "readOnly": true,
              "type": "object",
              "properties": {
                "enable-rsvp-trap": {
                  "description": "Use this attribute to enable/disable the rsvp trap",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                }
              }
            }
          }
        },
        "dscp": {
          "description": "container related to dscp",
          "readOnly": true,
          "type": "object",
          "properties": {
            "state": {
              "description": "state parameters related to dscp",
              "readOnly": true,
              "type": "object",
              "properties": {
                "supported-dscp-class-name": {
                  "description": "Supported dscp class name",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "minLength": 1,
                    "maxLength": 1965,
                    "pattern": "[^?' =,>|]+",
                    "type": "string",
                    "mandatory": false
                  }
                },
                "supported-dscp-bits": {
                  "description": "Supported dscp bits",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "minLength": 1,
                    "maxLength": 1965,
                    "pattern": "[^?' =,>|]+",
                    "type": "string",
                    "mandatory": false
                  }
                },
                "class-exp-mapping-name": {
                  "description": "exp mapping class name",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "minLength": 1,
                    "maxLength": 1965,
                    "pattern": "[^?' =,>|]+",
                    "type": "string",
                    "mandatory": false
                  }
                },
                "class-exp-mapping-bits": {
                  "description": "exp mapping class bits",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "minLength": 1,
                    "maxLength": 1965,
                    "pattern": "[^?' =,>|]+",
                    "type": "string",
                    "mandatory": false
                  }
                },
                "class-exp-mapping": {
                  "description": "Value of the exp class map",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "mandatory": false
                  }
                },
                "class-exp-mapping-value": {
                  "description": "Value of the exp class map",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 255,
                    "mandatory": false
                  }
                }
              }
            }
          }
        },
        "rsvp-instance": {
          "description": "Container for RSVP instances",
          "readOnly": false,
          "type": "object",
          "properties": {
            "summary-refresh": {
              "description": "Top level list for rsvp summary refresh message",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "description": "Neighbor address",
                    "readOnly": true,
                    "path": "../state/address",
                    "type": "string",
                    "mandatory": false
                  },
                  "state": {
                    "description": "state conatiner for rsvp summary refresh",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "Neighbor address",
                        "readOnly": true,
                        "oneOf": [
                          {
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string"
                          },
                          {
                            "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                            "type": "string"
                          }
                        ],
                        "mandatory": false
                      },
                      "trunk-id": {
                        "description": "rsvp trunk identifier",
                        "readOnly": true,
                        "type": "number",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "mandatory": false
                      },
                      "lsp-id": {
                        "description": "Label switch path id",
                        "readOnly": true,
                        "type": "number",
                        "minimum": 0,
                        "maximum": 65535,
                        "mandatory": false
                      },
                      "session-frr-type": {
                        "description": "Type of the rsvp session (main session/detour session)",
                        "readOnly": true,
                        "enum": [
                          "main",
                          "detour"
                        ],
                        "mandatory": false
                      },
                      "ingress": {
                        "description": "Source address of the trunk",
                        "readOnly": true,
                        "oneOf": [
                          {
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string"
                          },
                          {
                            "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                            "type": "string"
                          }
                        ],
                        "mandatory": false
                      },
                      "egress": {
                        "description": "Egress endpoint address for the trunk",
                        "readOnly": true,
                        "oneOf": [
                          {
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string"
                          },
                          {
                            "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                            "type": "string"
                          }
                        ],
                        "mandatory": false
                      },
                      "trunk-session-type": {
                        "description": "Type of the session is either primary or secondary",
                        "readOnly": true,
                        "enum": [
                          "secondary",
                          "primary"
                        ],
                        "mandatory": false
                      }
                    }
                  }
                },
                "keyFields": [
                  "address"
                ]
              }
            },
            "local-address-ipv4": {
              "description": "Top level list for rsvp local ipv4 address",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "addr": {
                    "description": "Local addresses known to RSVP on this node",
                    "readOnly": true,
                    "path": "../state/addr",
                    "type": "string",
                    "mandatory": false
                  },
                  "state": {
                    "description": "state conatiner for rsvp local ipv4 address",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "if-name": {
                        "description": "Name of the interface",
                        "readOnly": true,
                        "path": "/ipi-interface:interfaces/ipi-interface:interface/ipi-interface:name",
                        "type": "string",
                        "mandatory": false
                      },
                      "family": {
                        "description": "Address family",
                        "readOnly": true,
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ],
                        "mandatory": false
                      },
                      "addr": {
                        "description": "ip address",
                        "readOnly": true,
                        "oneOf": [
                          {
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string"
                          },
                          {
                            "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                            "type": "string"
                          }
                        ],
                        "mandatory": false
                      }
                    }
                  }
                },
                "keyFields": [
                  "addr"
                ]
              }
            },
            "local-address-ipv6": {
              "description": "Top level list for rsvp local ipv6 address",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "addr": {
                    "description": "Local addresses known to RSVP on this node",
                    "readOnly": true,
                    "path": "../state/addr",
                    "type": "string",
                    "mandatory": false
                  },
                  "state": {
                    "description": "state conatiner for rsvp local ipv6 address",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "if-name": {
                        "description": "Name of the interface",
                        "readOnly": true,
                        "path": "/ipi-interface:interfaces/ipi-interface:interface/ipi-interface:name",
                        "type": "string",
                        "mandatory": false
                      },
                      "family": {
                        "description": "Address family",
                        "readOnly": true,
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ],
                        "mandatory": false
                      },
                      "addr": {
                        "description": "ip address",
                        "readOnly": true,
                        "oneOf": [
                          {
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string"
                          },
                          {
                            "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                            "type": "string"
                          }
                        ],
                        "mandatory": false
                      }
                    }
                  }
                },
                "keyFields": [
                  "addr"
                ]
              }
            },
            "rsvp-nexthop": {
              "description": "Top level list for RSVP next hop information",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "prefix": {
                    "description": "Nexthop Prefix address for the RSVP",
                    "readOnly": true,
                    "path": "../state/prefix",
                    "type": "string",
                    "mandatory": false
                  },
                  "state": {
                    "description": "state conatiner for rsvp nexthop",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "prefix": {
                        "description": "Prefix of this radix",
                        "readOnly": true,
                        "oneOf": [
                          {
                            "minLength": 0,
                            "maxLength": 32,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))",
                            "type": "string"
                          },
                          {
                            "minLength": 0,
                            "maxLength": 50,
                            "pattern": "((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))",
                            "type": "string"
                          }
                        ],
                        "mandatory": false
                      },
                      "number-of-sessions": {
                        "description": "Number of sessions",
                        "readOnly": true,
                        "type": "number",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "mandatory": false
                      },
                      "ip-addr": {
                        "description": "ip addrress",
                        "readOnly": true,
                        "oneOf": [
                          {
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string"
                          },
                          {
                            "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                            "type": "string"
                          }
                        ],
                        "mandatory": false
                      },
                      "if-name": {
                        "description": "Name of the interface",
                        "readOnly": true,
                        "path": "/ipi-interface:interfaces/ipi-interface:interface/ipi-interface:name",
                        "type": "string",
                        "mandatory": false
                      }
                    }
                  }
                },
                "keyFields": [
                  "prefix"
                ]
              }
            },
            "config": {
              "description": "configuration container for rsvp",
              "readOnly": false,
              "type": "object",
              "properties": {
                "rsvp": {
                  "description": "Use this attribute to enter router mode from configure mode and to enable the RSVP daemon, if it is not already enabled and Enter in to router rsvp mode from configure mode",
                  "readOnly": false,
                  "enum": [
                    "rsvp"
                  ],
                  "mandatory": true
                },
                "enable-explicit-null": {
                  "description": "Use this attribute to send explicit-null labels for directly-connected forwarding equivalency classes (FECs) instead of implicit-null labels. This command controls the label value advertised to an egress router of an LSP. By default, implicit null label (label 3) is advertised for directly connected FECs. If implicit-null label is advertised, the penultimate hop removes the label and sends the packet as a plain IP packet to the egress router. The explicit-null command advertises label 0 and retains the label so the egress router can pop it. For details about usage of explicit-null, please refer to RFC 3032.Use the no parameter with this command to stop sending explicit-null labels for directly-connected FECs and resume sending implicit-null labels.",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "enable-local-protection": {
                  "description": "Use this attribute to enable/disable the local repair of explicit routes for which this router is a transit node",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "enable-php": {
                  "description": "Use this attribute to enable Penultimate-Hop-Popping for the router. An egress router sends either the implicit-null or the explicit-null label for LSPs. If the no-php command has been enabled, the egress router sends non-reserved labels (those labels in the label pool range allotted to RSVP) to the upstream router.",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "enable-entropy-label-capability": {
                  "description": "Use this attribute to enable Entropy Label Capability (ELC) for the router. An egress router may insert ELC TLV in Attributes Flags TLV of Resv message. If no entropy-label-capability command has been enabled, the egress router doesnt include ELC TLV in Resv message.",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "disable-refresh-resv-parsing": {
                  "description": "Use this attribute to disable parsing of Refresh RESV messages received from upstream nodes. Use this attribute to minimize message processing by RSVP when you are sure that a particular router does not need to parse Refresh RESV messages to check for changes because LSPs passing through this router are not required to be updated simultaneously.",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "disable-refresh-path-parsing": {
                  "description": "Use this attribute to disable parsing of Refresh PATH messages received from upstream nodes. Use this attribute to minimize message processing by RSVP when you are sure that a particular router does not need to parse Refresh-PATH messages to check for changes, because LSPs passing through this router are not required to be updated simultaneously.",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "disable-loop-detection": {
                  "description": "Use this attribute to turn on loop detection for Path and Reservation messages exchanged between LSRs",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "revert-timer": {
                  "description": "Use this attribute to Hold-on timer before revert back to primary session",
                  "readOnly": false,
                  "minimum": 1,
                  "maximum": 65535,
                  "type": "number",
                  "mandatory": false
                },
                "enable-bundle-send": {
                  "description": "Use thi attrubute Enable sending of BUNDLE messages for all the interfaces",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "ingress": {
                  "description": "Use this attribute to specify a .from. IPv4 address for the RSVP daemon. This command can be invoked from either the router rsvp mode or from the rsvp-trunk mode. In the RSVP router mode, this command defines the source address as an IPv4 packet sent out by the RSVP daemon. In the RSVP trunk mode, this command indicates a sender.s address in the sender template object that is used in path messages.",
                  "readOnly": false,
                  "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                  "type": "string",
                  "mandatory": false
                },
                "ingress-ipv6": {
                  "description": "Use this attribute to specify a .from. IPv6 address for the RSVP daemon. This command can be invoked from either the router rsvp mode or from the rsvp-trunk mode. In the router rsvp mode, this command defines the source address as an IPv4 packet being sent out by the RSVP daemon. In the rsvp trunk mode, this command indicates a sender.saddress in the sender template object that is used in path messages.",
                  "readOnly": false,
                  "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                  "type": "string",
                  "mandatory": false
                }
              }
            },
            "state": {
              "description": "state conatiner for rsvp",
              "readOnly": true,
              "type": "object",
              "properties": {
                "counters": {
                  "description": "Platform wide RSVP statistics and counters",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "in-path-messages": {
                      "description": "Number of received RSVP Path messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-path-error-messages": {
                      "description": "Number of received RSVP Path Error messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-path-tear-messages": {
                      "description": "Number of received RSVP Path Error messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-reservation-fixed-filter-messages": {
                      "description": "Number of received RSVP Resv fixed filter style messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-reservation-wildcard-filter-messages": {
                      "description": "Number of received RSVP Resv wildcard filter style messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-reservation-shared-explicit-messages": {
                      "description": "Number of received RSVP Resv shared explicit style messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-reservation-error-messages": {
                      "description": "Number of received RSVP Resv Error messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-reservation-tear-messages": {
                      "description": "Number of received RSVP Resv Tear messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-reservation-conform-messages": {
                      "description": "Number of received RSVP Resv Conform messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-hello-messages": {
                      "description": "Number of received RSVP hello messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-bundle-messages": {
                      "description": "Number of received RSVP bundle messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-acknowledge-messages": {
                      "description": "Number of received RSVP refresh reduction acknowledge messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-srefresh-messages": {
                      "description": "Number of received RSVP summary refresh messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "in-notify-messages": {
                      "description": "Number of received RSVP Notification messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-path-messages": {
                      "description": "Number of sent RSVP PATH messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-path-error-messages": {
                      "description": "Number of sent RSVP Path Error messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-path-tear-messages": {
                      "description": "Number of sent RSVP Path Tear messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-reservation-fixed-filter-messages": {
                      "description": "Number of sent RSVP Resv fixed filter style messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-reservation-wildcard-filter-messages": {
                      "description": "Number of sent RSVP Resv wildcard filter style messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-reservatoion-shared-explicit-messages": {
                      "description": "Number of sent RSVP Resv shared explicit style messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-reservation-error-messages": {
                      "description": "Number of sent RSVP Resv Error messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-reservation-tear-messages": {
                      "description": "Number of sent RSVP Resv Tear messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-reservation-conform-messages": {
                      "description": "Number of sent RSVP Resv Conform messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-hello-messages": {
                      "description": "Number of sent RSVP hello messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-bundle-messages": {
                      "description": "Number of sent RSVP bundle messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-acknowledge-messages": {
                      "description": "Number of sent RSVP refresh reduction messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-srefresh-messages": {
                      "description": "Number of sent RSVP summary refresh messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "out-notify-messages": {
                      "description": "Number of sent RSVP Notification messages",
                      "readOnly": true,
                      "type": "number",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "mandatory": false
                    },
                    "total-number-of-sessions": {
                      "description": "Total number of sessions created",
                      "readOnly": true,
                      "type": "number",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "mandatory": false
                    },
                    "active-sessions": {
                      "description": "Total number of active sessions",
                      "readOnly": true,
                      "type": "number",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "mandatory": false
                    },
                    "total-ingress-sessions": {
                      "description": "Total number of ingress sessions on this node",
                      "readOnly": true,
                      "type": "number",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "mandatory": false
                    },
                    "active-ingress-sessions": {
                      "description": "Total number of active ingress sessions on this node",
                      "readOnly": true,
                      "type": "number",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "mandatory": false
                    },
                    "total-transit-sessions": {
                      "description": "Total number of transit sessions on this node",
                      "readOnly": true,
                      "type": "number",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "mandatory": false
                    },
                    "active-transit-sessions": {
                      "description": "Total number of active transit sessions on this node",
                      "readOnly": true,
                      "type": "number",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "mandatory": false
                    },
                    "total-egress-sessions": {
                      "description": "Total number of egress sessions on this node",
                      "readOnly": true,
                      "type": "number",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "mandatory": false
                    },
                    "active-egress-sessions": {
                      "description": "Total number of active egress sessions on this node",
                      "readOnly": true,
                      "type": "number",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "mandatory": false
                    }
                  }
                },
                "rsvp": {
                  "description": "Use this attribute to enter router mode from configure mode and to enable the RSVP daemon, if it is not already enabled and Enter in to router rsvp mode from configure mode",
                  "readOnly": true,
                  "enum": [
                    "rsvp"
                  ],
                  "mandatory": true
                },
                "enable-explicit-null": {
                  "description": "Use this attribute to send explicit-null labels for directly-connected forwarding equivalency classes (FECs) instead of implicit-null labels. This command controls the label value advertised to an egress router of an LSP. By default, implicit null label (label 3) is advertised for directly connected FECs. If implicit-null label is advertised, the penultimate hop removes the label and sends the packet as a plain IP packet to the egress router. The explicit-null command advertises label 0 and retains the label so the egress router can pop it. For details about usage of explicit-null, please refer to RFC 3032.Use the no parameter with this command to stop sending explicit-null labels for directly-connected FECs and resume sending implicit-null labels.",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "enable-local-protection": {
                  "description": "Use this attribute to enable/disable the local repair of explicit routes for which this router is a transit node",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "enable-php": {
                  "description": "Use this attribute to enable Penultimate-Hop-Popping for the router. An egress router sends either the implicit-null or the explicit-null label for LSPs. If the no-php command has been enabled, the egress router sends non-reserved labels (those labels in the label pool range allotted to RSVP) to the upstream router.",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "enable-entropy-label-capability": {
                  "description": "Use this attribute to enable Entropy Label Capability (ELC) for the router. An egress router may insert ELC TLV in Attributes Flags TLV of Resv message. If no entropy-label-capability command has been enabled, the egress router doesnt include ELC TLV in Resv message.",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "disable-refresh-resv-parsing": {
                  "description": "Use this attribute to disable parsing of Refresh RESV messages received from upstream nodes. Use this attribute to minimize message processing by RSVP when you are sure that a particular router does not need to parse Refresh RESV messages to check for changes because LSPs passing through this router are not required to be updated simultaneously.",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "disable-refresh-path-parsing": {
                  "description": "Use this attribute to disable parsing of Refresh PATH messages received from upstream nodes. Use this attribute to minimize message processing by RSVP when you are sure that a particular router does not need to parse Refresh-PATH messages to check for changes, because LSPs passing through this router are not required to be updated simultaneously.",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "disable-loop-detection": {
                  "description": "Use this attribute to turn on loop detection for Path and Reservation messages exchanged between LSRs",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "revert-timer": {
                  "description": "Use this attribute to Hold-on timer before revert back to primary session",
                  "readOnly": true,
                  "minimum": 1,
                  "maximum": 65535,
                  "type": "number",
                  "mandatory": false
                },
                "enable-bundle-send": {
                  "description": "Use thi attrubute Enable sending of BUNDLE messages for all the interfaces",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "null"
                  },
                  "maxItems": 1,
                  "mandatory": false
                },
                "ingress": {
                  "description": "Use this attribute to specify a .from. IPv4 address for the RSVP daemon. This command can be invoked from either the router rsvp mode or from the rsvp-trunk mode. In the RSVP router mode, this command defines the source address as an IPv4 packet sent out by the RSVP daemon. In the RSVP trunk mode, this command indicates a sender.s address in the sender template object that is used in path messages.",
                  "readOnly": true,
                  "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                  "type": "string",
                  "mandatory": false
                },
                "ingress-ipv6": {
                  "description": "Use this attribute to specify a .from. IPv6 address for the RSVP daemon. This command can be invoked from either the router rsvp mode or from the rsvp-trunk mode. In the router rsvp mode, this command defines the source address as an IPv4 packet being sent out by the RSVP daemon. In the rsvp trunk mode, this command indicates a sender.saddress in the sender template object that is used in path messages.",
                  "readOnly": true,
                  "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                  "type": "string",
                  "mandatory": false
                },
                "rsvp-version": {
                  "description": "Version of rsvp",
                  "readOnly": true,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 65535,
                  "mandatory": false
                },
                "rsvp-state": {
                  "description": "State of the RSVP protocol",
                  "readOnly": true,
                  "enum": [
                    "disable",
                    "enable"
                  ],
                  "mandatory": false
                },
                "refresh-timer": {
                  "description": "The timer specifies the interval after which Path and/ or Reservation Request",
                  "readOnly": true,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 4294967295,
                  "mandatory": false
                },
                "keep-multiplier": {
                  "description": "Reservation lifetime value for a Labeled Switched Path",
                  "readOnly": true,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 4294967295,
                  "mandatory": false
                },
                "preemption-type": {
                  "description": "Type of the preemption",
                  "readOnly": true,
                  "enum": [
                    "Normal"
                  ],
                  "mandatory": false
                },
                "selected-ingress-ipv4": {
                  "description": "Auto Selected IPv4 ingress id when ingress-id is not explicitly configured",
                  "readOnly": true,
                  "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                  "type": "string",
                  "mandatory": false
                },
                "selected-ingress-ipv6": {
                  "description": "Auto Selected IPv6 ingress id when ingress-id is not explicitly configured",
                  "readOnly": true,
                  "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                  "type": "string",
                  "mandatory": false
                }
              }
            },
            "route-refresh": {
              "description": "container for route-refresh",
              "readOnly": false,
              "type": "object",
              "properties": {
                "config": {
                  "description": "configuration container for route-refresh",
                  "readOnly": false,
                  "type": "object",
                  "properties": {
                    "enable-message-ack": {
                      "description": "Use this attribute to enable message acknowledgement for all messages being sent to neighbors that are known to support refresh reduction.",
                      "readOnly": false,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    },
                    "disable-refresh-reduction": {
                      "description": "Use this attribute to enable refresh reduction capability advertisement for all interfaces",
                      "readOnly": false,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    },
                    "ack-wait-timeout": {
                      "description": "Use this attribute to configure the acknowledgement wait timeout for all RSVP-TE neighbors",
                      "readOnly": false,
                      "minimum": 1,
                      "maximum": 65535,
                      "type": "number",
                      "mandatory": false
                    },
                    "refresh-time": {
                      "description": "Use this attribute to configure RSVP refresh interval timer. The timer specifies the interval after which Path and/ or Reservation Request (Resv) messages will be sent out.The refresh time and keep multiplier are two interrelated timing parameters used to calculate the valid Reservation Lifetime for an LSP. Refresh time regulates the interval between Refresh messages which include Path and Reservation Request (Resv) messages. Refresh messages are sent periodically so that reservation does not timeout in the neighboring nodes. Each sender and receiver host sends Path and Resv messages, downstream and upstream respectively, along the paths.",
                      "readOnly": false,
                      "minimum": 1,
                      "maximum": 65535,
                      "type": "number",
                      "mandatory": false
                    },
                    "keep-multiplier": {
                      "description": "Use this attribute to configure the constant to be used to calculate a valid reservation lifetime for a Labeled Switched Path (LSP).The refresh time and keep multiplier are two interrelated timing parameters used to calculate the valid reservation lifetime for an LSP. The router sends refresh messages periodically so that the neighbors do not timeout",
                      "readOnly": false,
                      "minimum": 1,
                      "maximum": 255,
                      "type": "number",
                      "mandatory": false
                    },
                    "ack-send-timer": {
                      "description": "Use this attribute to configure the timer for sending acknowledgement for all RSVP-TE neighbors. By default, timer is disabled.",
                      "readOnly": false,
                      "minimum": 1,
                      "maximum": 5,
                      "type": "number",
                      "mandatory": false
                    }
                  }
                },
                "state": {
                  "description": "state parameters related to route-refresh",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "enable-message-ack": {
                      "description": "Use this attribute to enable message acknowledgement for all messages being sent to neighbors that are known to support refresh reduction.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    },
                    "disable-refresh-reduction": {
                      "description": "Use this attribute to enable refresh reduction capability advertisement for all interfaces",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    },
                    "ack-wait-timeout": {
                      "description": "Use this attribute to configure the acknowledgement wait timeout for all RSVP-TE neighbors",
                      "readOnly": true,
                      "minimum": 1,
                      "maximum": 65535,
                      "type": "number",
                      "mandatory": false
                    },
                    "refresh-time": {
                      "description": "Use this attribute to configure RSVP refresh interval timer. The timer specifies the interval after which Path and/ or Reservation Request (Resv) messages will be sent out.The refresh time and keep multiplier are two interrelated timing parameters used to calculate the valid Reservation Lifetime for an LSP. Refresh time regulates the interval between Refresh messages which include Path and Reservation Request (Resv) messages. Refresh messages are sent periodically so that reservation does not timeout in the neighboring nodes. Each sender and receiver host sends Path and Resv messages, downstream and upstream respectively, along the paths.",
                      "readOnly": true,
                      "minimum": 1,
                      "maximum": 65535,
                      "type": "number",
                      "mandatory": false
                    },
                    "keep-multiplier": {
                      "description": "Use this attribute to configure the constant to be used to calculate a valid reservation lifetime for a Labeled Switched Path (LSP).The refresh time and keep multiplier are two interrelated timing parameters used to calculate the valid reservation lifetime for an LSP. The router sends refresh messages periodically so that the neighbors do not timeout",
                      "readOnly": true,
                      "minimum": 1,
                      "maximum": 255,
                      "type": "number",
                      "mandatory": false
                    },
                    "ack-send-timer": {
                      "description": "Use this attribute to configure the timer for sending acknowledgement for all RSVP-TE neighbors. By default, timer is disabled.",
                      "readOnly": true,
                      "minimum": 1,
                      "maximum": 5,
                      "type": "number",
                      "mandatory": false
                    }
                  }
                }
              }
            },
            "fast-reroute": {
              "description": "container for fast-reroute",
              "readOnly": false,
              "type": "object",
              "properties": {
                "config": {
                  "description": "configuration container for fast-reroute",
                  "readOnly": false,
                  "type": "object",
                  "properties": {
                    "default-frr-protection": {
                      "description": "Use this attribute to set default FRR protection mechanism to trigger when local protection requested by protection mechanism not mentioned via FRR object. When FRR object explicitly requests for the protection type, this attribute will not come into picture. Default will be one-to-one protection.",
                      "readOnly": false,
                      "enum": [
                        "one-to-one",
                        "facility"
                      ],
                      "mandatory": false
                    },
                    "preemption-type": {
                      "description": "Use this attribute to set preemption type for an LSP for the router. Preemption of an LSP or set of LSPs happens based on bandwidth constraints like preempting an LSP cause less number of LSPs be preempted upon satisfying the bandwidth required, preempting an LSP or set of LSPs which results in an LSP having less unused(remaining) bandwidth.",
                      "readOnly": false,
                      "enum": [
                        "less-lsp-preempted",
                        "less-unused-bandwidth"
                      ],
                      "mandatory": false
                    },
                    "bypass-lsp-addr-query-interval": {
                      "description": "Modify interval of bypass trunk querying LSP address",
                      "readOnly": false,
                      "minimum": 10,
                      "maximum": 60,
                      "type": "number",
                      "mandatory": false
                    },
                    "detour-id": {
                      "description": "Use this attribute to set a path-specific detour LSP identification method, using the detour object.",
                      "readOnly": false,
                      "enum": [
                        "sender-template",
                        "path"
                      ],
                      "mandatory": false
                    },
                    "detour-allow-primary-upstream-path": {
                      "description": "Use this attribute to ensure detour formation allowed to consider upstream path of primary, a deviation to RFC 4090 section 6.2 recomendation. This attribute intended to be used on special case where detour protection required on ring topology with no additional alternate path available.",
                      "readOnly": false,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    }
                  }
                },
                "state": {
                  "description": "state container for fast-reroute",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "default-frr-protection": {
                      "description": "Use this attribute to set default FRR protection mechanism to trigger when local protection requested by protection mechanism not mentioned via FRR object. When FRR object explicitly requests for the protection type, this attribute will not come into picture. Default will be one-to-one protection.",
                      "readOnly": true,
                      "enum": [
                        "one-to-one",
                        "facility"
                      ],
                      "mandatory": false
                    },
                    "preemption-type": {
                      "description": "Use this attribute to set preemption type for an LSP for the router. Preemption of an LSP or set of LSPs happens based on bandwidth constraints like preempting an LSP cause less number of LSPs be preempted upon satisfying the bandwidth required, preempting an LSP or set of LSPs which results in an LSP having less unused(remaining) bandwidth.",
                      "readOnly": true,
                      "enum": [
                        "less-lsp-preempted",
                        "less-unused-bandwidth"
                      ],
                      "mandatory": false
                    },
                    "bypass-lsp-addr-query-interval": {
                      "description": "Modify interval of bypass trunk querying LSP address",
                      "readOnly": true,
                      "minimum": 10,
                      "maximum": 60,
                      "type": "number",
                      "mandatory": false
                    },
                    "detour-id": {
                      "description": "Use this attribute to set a path-specific detour LSP identification method, using the detour object.",
                      "readOnly": true,
                      "enum": [
                        "sender-template",
                        "path"
                      ],
                      "mandatory": false
                    },
                    "detour-allow-primary-upstream-path": {
                      "description": "Use this attribute to ensure detour formation allowed to consider upstream path of primary, a deviation to RFC 4090 section 6.2 recomendation. This attribute intended to be used on special case where detour protection required on ring topology with no additional alternate path available.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    }
                  }
                }
              }
            },
            "cspf": {
              "description": "container for cspf",
              "readOnly": false,
              "type": "object",
              "properties": {
                "config": {
                  "description": "configuration container for cspf",
                  "readOnly": false,
                  "type": "object",
                  "properties": {
                    "disable-cspf": {
                      "description": "Use this attribute to disable the use of the Constrained Shortest Path First (CSPF) server for all RSVP sessions.Disable CSPF when no nodes support the required traffic engineering extensions.When this command is executed in Router mode, CSPF is enabled for all configured RSVP sessions, and all RSVP sessions configured from this point forward. If the default CSPF per RSVP session is enabled, it will be disabled. The CSPF status for RSVP sessions can be verified using the show rsvp session command with the detail option",
                      "readOnly": false,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    },
                    "cspf-lsp-reoptimization-time": {
                      "description": "Use this attribute to configure timer for the reoptimizing lsp.",
                      "readOnly": false,
                      "minimum": 1,
                      "maximum": 240,
                      "type": "number",
                      "mandatory": false
                    }
                  }
                },
                "state": {
                  "description": "state container for cspf",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "disable-cspf": {
                      "description": "Use this attribute to disable the use of the Constrained Shortest Path First (CSPF) server for all RSVP sessions.Disable CSPF when no nodes support the required traffic engineering extensions.When this command is executed in Router mode, CSPF is enabled for all configured RSVP sessions, and all RSVP sessions configured from this point forward. If the default CSPF per RSVP session is enabled, it will be disabled. The CSPF status for RSVP sessions can be verified using the show rsvp session command with the detail option",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    },
                    "cspf-lsp-reoptimization-time": {
                      "description": "Use this attribute to configure timer for the reoptimizing lsp.",
                      "readOnly": true,
                      "minimum": 1,
                      "maximum": 240,
                      "type": "number",
                      "mandatory": false
                    }
                  }
                }
              }
            },
            "global": {
              "description": "global container for hello timers and graceful restart",
              "readOnly": false,
              "type": "object",
              "properties": {
                "hellos": {
                  "description": "container for hello",
                  "readOnly": false,
                  "type": "object",
                  "properties": {
                    "config": {
                      "description": "configuration container for hello messages",
                      "readOnly": false,
                      "type": "object",
                      "properties": {
                        "enable-hello-receipt": {
                          "description": "Use this attribute to enable the receipt of Hello messages from peers.",
                          "readOnly": false,
                          "type": "array",
                          "items": {
                            "type": "null"
                          },
                          "maxItems": 1,
                          "mandatory": false
                        },
                        "hello-interval": {
                          "description": "Use this attribute to set an interval between Hello packets.Used as a global command, this value is over-ridden by the hello-interval set on the interface (see rsvp hello-interval).For optimum performance, set this value no more than one-third of the hello-timeout value.",
                          "readOnly": false,
                          "minimum": 1,
                          "maximum": 65535,
                          "type": "number",
                          "mandatory": false
                        },
                        "hello-timeout": {
                          "description": "Timeout for clearing up all sessions shared with a neighbor.If an LSR has not received a Hello message from a peer within the number of seconds set with this command, all sessions shared with this peer are reset. The hello-timeout determines how long an RSVP node waits for a hello message before declaring a neighbor to be down.",
                          "readOnly": false,
                          "minimum": 1,
                          "maximum": 65535,
                          "type": "number",
                          "mandatory": false
                        }
                      }
                    },
                    "state": {
                      "description": "Operational container for hello messages",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "enable-hello-receipt": {
                          "description": "Use this attribute to enable the receipt of Hello messages from peers.",
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "type": "null"
                          },
                          "maxItems": 1,
                          "mandatory": false
                        },
                        "hello-interval": {
                          "description": "Use this attribute to set an interval between Hello packets.Used as a global command, this value is over-ridden by the hello-interval set on the interface (see rsvp hello-interval).For optimum performance, set this value no more than one-third of the hello-timeout value.",
                          "readOnly": true,
                          "minimum": 1,
                          "maximum": 65535,
                          "type": "number",
                          "mandatory": false
                        },
                        "hello-timeout": {
                          "description": "Timeout for clearing up all sessions shared with a neighbor.If an LSR has not received a Hello message from a peer within the number of seconds set with this command, all sessions shared with this peer are reset. The hello-timeout determines how long an RSVP node waits for a hello message before declaring a neighbor to be down.",
                          "readOnly": true,
                          "minimum": 1,
                          "maximum": 65535,
                          "type": "number",
                          "mandatory": false
                        }
                      }
                    }
                  }
                },
                "graceful-restart": {
                  "description": "container for graceful restart",
                  "readOnly": false,
                  "type": "object",
                  "properties": {
                    "config": {
                      "description": "configuration container for graceful-restart",
                      "readOnly": false,
                      "type": "object",
                      "properties": {
                        "enable-graceful-restart": {
                          "description": "Use this attribute to enable RSVP-TE Graceful Restart capability on a router. This is a global parameter. RSVP-TE determines whether or not to send the graceful restart capability object in its hello message. However, this capability also depends on support for graceful restart on the neighbor router.",
                          "readOnly": false,
                          "type": "array",
                          "items": {
                            "type": "null"
                          },
                          "maxItems": 1,
                          "mandatory": true
                        },
                        "restart-time": {
                          "description": "Use this attribute to set a restart time for an RSVP-TE graceful restart configuration.",
                          "readOnly": false,
                          "minimum": 10000,
                          "maximum": 600000,
                          "type": "number",
                          "mandatory": false
                        },
                        "recovery-time": {
                          "description": "Use this attribute to set a recovery time for an RSVP-TE graceful restart configuration.",
                          "readOnly": false,
                          "minimum": 60000,
                          "maximum": 3600000,
                          "type": "number",
                          "mandatory": false
                        }
                      }
                    },
                    "state": {
                      "description": "Operational container for graceful-restart",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "enable-graceful-restart": {
                          "description": "Use this attribute to enable RSVP-TE Graceful Restart capability on a router. This is a global parameter. RSVP-TE determines whether or not to send the graceful restart capability object in its hello message. However, this capability also depends on support for graceful restart on the neighbor router.",
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "type": "null"
                          },
                          "maxItems": 1,
                          "mandatory": true
                        },
                        "restart-time": {
                          "description": "Use this attribute to set a restart time for an RSVP-TE graceful restart configuration.",
                          "readOnly": true,
                          "minimum": 10000,
                          "maximum": 600000,
                          "type": "number",
                          "mandatory": false
                        },
                        "recovery-time": {
                          "description": "Use this attribute to set a recovery time for an RSVP-TE graceful restart configuration.",
                          "readOnly": true,
                          "minimum": 60000,
                          "maximum": 3600000,
                          "type": "number",
                          "mandatory": false
                        }
                      }
                    }
                  }
                }
              }
            },
            "gmpls": {
              "description": "Top level container for gmpls",
              "readOnly": false,
              "type": "object",
              "properties": {
                "config": {
                  "description": "configuration container for gmpls",
                  "readOnly": false,
                  "type": "object",
                  "properties": {
                    "enable-gmpls-notification": {
                      "description": "Use this attribute to enable a router.s ability to send notification messages for all GMPLS LSPs configured on the box. This command can be used to enable or disable sending notification messages. By default, notification is enabled for all GMPLS LSPs configured on the box.",
                      "readOnly": false,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    },
                    "enable-pre-program-suggested-label": {
                      "description": "Enable suggested label feature of gmpls",
                      "readOnly": false,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    }
                  }
                },
                "state": {
                  "description": "state container for gmpls",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "enable-gmpls-notification": {
                      "description": "Use this attribute to enable a router.s ability to send notification messages for all GMPLS LSPs configured on the box. This command can be used to enable or disable sending notification messages. By default, notification is enabled for all GMPLS LSPs configured on the box.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    },
                    "enable-pre-program-suggested-label": {
                      "description": "Enable suggested label feature of gmpls",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    }
                  }
                }
              }
            },
            "srlg": {
              "description": "Top level container for Shared Risk Link Groups",
              "readOnly": false,
              "type": "object",
              "properties": {
                "config": {
                  "description": "configuration container for Shared Risk Link Groups",
                  "readOnly": false,
                  "type": "object",
                  "properties": {
                    "srlg-disjoint": {
                      "description": "Use the attribute to configure the srlg-disjoint path-protection in global mode",
                      "readOnly": false,
                      "enum": [
                        "forced",
                        "preferred"
                      ],
                      "mandatory": false
                    }
                  }
                },
                "state": {
                  "description": "state container for Shared Risk Link Groups",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "srlg-disjoint": {
                      "description": "Use the attribute to configure the srlg-disjoint path-protection in global mode",
                      "readOnly": true,
                      "enum": [
                        "forced",
                        "preferred"
                      ],
                      "mandatory": false
                    }
                  }
                }
              }
            },
            "diff-serv": {
              "description": "Top level container for diff serv",
              "readOnly": false,
              "type": "object",
              "properties": {
                "config": {
                  "description": "configuration container for diff serv",
                  "readOnly": false,
                  "type": "object",
                  "properties": {
                    "enable-override-diff-serv": {
                      "description": "Setup a non-diffserv lsp if diffserv obj is not present in Path message",
                      "readOnly": false,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    }
                  }
                },
                "state": {
                  "description": "state container for diff serv",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "enable-override-diff-serv": {
                      "description": "Setup a non-diffserv lsp if diffserv obj is not present in Path message",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "maxItems": 1,
                      "mandatory": false
                    }
                  }
                }
              }
            },
            "neighbors": {
              "description": "Top level container for rsvp neighbors",
              "readOnly": false,
              "type": "object",
              "properties": {
                "neighbor": {
                  "description": "Top level list for rsvp neighbor",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "Directly connected neighbor",
                        "readOnly": false,
                        "path": "../config/address",
                        "type": "string",
                        "mandatory": false
                      },
                      "config": {
                        "description": "configuration container for rsvp neighbor",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "Use this attribute to designate a neighbor IPv4 or IPv6 address to use when exchanging hello messages. Any neighbor hello message that is not explicitly identified is rejected. Use to Identify a directly connected ipv4 neighbor",
                            "readOnly": false,
                            "oneOf": [
                              {
                                "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                "type": "string"
                              },
                              {
                                "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                "type": "string"
                              }
                            ],
                            "mandatory": false
                          }
                        }
                      },
                      "state": {
                        "description": "state conatiner for rsvp neighbor",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "Use this attribute to designate a neighbor IPv4 or IPv6 address to use when exchanging hello messages. Any neighbor hello message that is not explicitly identified is rejected. Use to Identify a directly connected ipv4 neighbor",
                            "readOnly": true,
                            "oneOf": [
                              {
                                "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                "type": "string"
                              },
                              {
                                "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                "type": "string"
                              }
                            ],
                            "mandatory": false
                          }
                        }
                      }
                    },
                    "keyFields": [
                      "address"
                    ]
                  }
                },
                "protocol-neighbor": {
                  "description": "Top level list for rsvp neighbor state",
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "neighbor-ip-address": {
                        "description": "Neighbor IP Address",
                        "readOnly": true,
                        "path": "../state/neighbor-ip-address",
                        "type": "string",
                        "mandatory": false
                      },
                      "state": {
                        "description": "state conatiner for rsvp summary refresh",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "neighbor-ip-address": {
                            "description": "Neighbor ip address",
                            "readOnly": true,
                            "oneOf": [
                              {
                                "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                "type": "string"
                              },
                              {
                                "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                "type": "string"
                              }
                            ],
                            "mandatory": false
                          },
                          "session-count": {
                            "description": "Number of sessions",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967295,
                            "mandatory": false
                          },
                          "refresh-reduction": {
                            "description": "Status of the neighbor refresh reduction",
                            "readOnly": true,
                            "enum": [
                              "not-supported",
                              "supported"
                            ],
                            "mandatory": false
                          },
                          "upstream-lsp-count": {
                            "description": "Number of upstream LSPs",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967295,
                            "mandatory": false
                          },
                          "downstream-lsp-count": {
                            "description": "Number of downstream LSPs",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967295,
                            "mandatory": false
                          },
                          "neighbor-state": {
                            "description": "Neighbot hello state",
                            "readOnly": true,
                            "enum": [
                              "up",
                              "down"
                            ],
                            "mandatory": false
                          },
                          "srefresh-remaining-time": {
                            "description": "Summary refresh remaining time",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967295,
                            "mandatory": false
                          },
                          "neighbor-type": {
                            "description": "Type of the neighbor(Implicit/Explicit)",
                            "readOnly": true,
                            "enum": [
                              "implicit",
                              "explicit"
                            ],
                            "mandatory": false
                          },
                          "max-acknowledge-packet": {
                            "description": "Maximum ackonwledge packet",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 65535,
                            "mandatory": false
                          },
                          "used-acknowledge-packet": {
                            "description": "Used ackonwledge packet",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 65535,
                            "mandatory": false
                          },
                          "max-bundle-packet": {
                            "description": "Maximum bundle packets",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 65535,
                            "mandatory": false
                          },
                          "used-bundle-packet": {
                            "description": "Used bundle packets",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 65535,
                            "mandatory": false
                          },
                          "lsp-id": {
                            "description": "Label switch path id",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 65535,
                            "mandatory": false
                          },
                          "session-frr-type": {
                            "description": "Type of the rsvp session (main session/detour session)",
                            "readOnly": true,
                            "enum": [
                              "main",
                              "detour"
                            ],
                            "mandatory": false
                          },
                          "ingress": {
                            "description": "Source address of the trunk",
                            "readOnly": true,
                            "oneOf": [
                              {
                                "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                "type": "string"
                              },
                              {
                                "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                "type": "string"
                              }
                            ],
                            "mandatory": false
                          },
                          "egress": {
                            "description": "Egress endpoint address for the trunk",
                            "readOnly": true,
                            "oneOf": [
                              {
                                "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                "type": "string"
                              },
                              {
                                "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                "type": "string"
                              }
                            ],
                            "mandatory": false
                          },
                          "trunk-session-type": {
                            "description": "Type of the session is either primary or secondary",
                            "readOnly": true,
                            "enum": [
                              "secondary",
                              "primary"
                            ],
                            "mandatory": false
                          },
                          "trunk-id": {
                            "description": "rsvp trunk identifier",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967295,
                            "mandatory": false
                          },
                          "graceful-restart-state": {
                            "description": "State of graceful restart operation",
                            "readOnly": true,
                            "enum": [
                              "normal",
                              "restart",
                              "recovery"
                            ],
                            "mandatory": false
                          },
                          "graceful-restart-set-recovery": {
                            "description": "Sending Recovery Time",
                            "readOnly": true,
                            "enum": [
                              "no",
                              "yes"
                            ],
                            "mandatory": false
                          },
                          "restart-time": {
                            "description": "Restart Time",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967295,
                            "mandatory": false
                          },
                          "recovery-time": {
                            "description": "Recovery Time",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967295,
                            "mandatory": false
                          },
                          "remaining-restart-time": {
                            "description": "Remaining Restart Time",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967295,
                            "mandatory": false
                          },
                          "remaining-recovery-time": {
                            "description": "Remaining Recovery Time",
                            "readOnly": true,
                            "type": "number",
                            "minimum": 0,
                            "maximum": 4294967295,
                            "mandatory": false
                          }
                        }
                      }
                    },
                    "keyFields": [
                      "neighbor-ip-address"
                    ]
                  }
                }
              }
            }
          }
        },
        "rsvp-paths": {
          "description": "container for the rsvp path",
          "readOnly": false,
          "type": "object",
          "properties": {
            "rsvp-path": {
              "description": "list of rsvp path",
              "readOnly": false,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "path-name": {
                    "description": "Use this attribute to configure the path",
                    "readOnly": false,
                    "path": "../config/path-name",
                    "type": "string",
                    "mandatory": false
                  },
                  "config": {
                    "description": "configuration container for rsvp path",
                    "readOnly": false,
                    "type": "object",
                    "properties": {
                      "path-name": {
                        "description": "Use this attribute to create a new RSVP path or to enter the Path command mode. In this mode, you can add or delete paths and also specify the path to be loose or strict.",
                        "readOnly": false,
                        "minLength": 1,
                        "maxLength": 128,
                        "pattern": "[^?' =,>|]+",
                        "type": "string",
                        "mandatory": false
                      },
                      "path-type": {
                        "description": "Use this attribute to configure rsvp path type is either mpls or gmpls. By default path type is mpls.",
                        "readOnly": false,
                        "enum": [
                          "mpls",
                          "gmpls"
                        ],
                        "mandatory": true
                      },
                      "description": {
                        "description": "Use this attribute to add description for rsvp path",
                        "readOnly": false,
                        "pattern": "[^?'=,>|]*",
                        "type": "string",
                        "mandatory": false
                      }
                    }
                  },
                  "state": {
                    "description": "state parameters related to rsvp paths",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "path-name": {
                        "description": "Use this attribute to create a new RSVP path or to enter the Path command mode. In this mode, you can add or delete paths and also specify the path to be loose or strict.",
                        "readOnly": true,
                        "minLength": 1,
                        "maxLength": 128,
                        "pattern": "[^?' =,>|]+",
                        "type": "string",
                        "mandatory": false
                      },
                      "path-type": {
                        "description": "Use this attribute to configure rsvp path type is either mpls or gmpls. By default path type is mpls.",
                        "readOnly": true,
                        "enum": [
                          "mpls",
                          "gmpls"
                        ],
                        "mandatory": true
                      },
                      "description": {
                        "description": "Use this attribute to add description for rsvp path",
                        "readOnly": true,
                        "pattern": "[^?'=,>|]*",
                        "type": "string",
                        "mandatory": false
                      },
                      "path-identifier": {
                        "description": "Identifier of rsvp path",
                        "readOnly": true,
                        "type": "number",
                        "minimum": 0,
                        "maximum": 65535,
                        "mandatory": false
                      },
                      "hop-count": {
                        "description": "Number of hops",
                        "readOnly": true,
                        "type": "number",
                        "minimum": 0,
                        "maximum": 65535,
                        "mandatory": false
                      }
                    }
                  },
                  "explicit-route-object": {
                    "description": "configuration container for rsvp path ero",
                    "readOnly": false,
                    "type": "object",
                    "properties": {
                      "mpls-hops": {
                        "description": "list of rsvp mpls path hops",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "mpls-hop": {
                            "description": "list of rsvp mpls path hop",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "hop-address": {
                                  "description": "Use this attribute to define an explicit IPv4 or IPv6 route sub-object as either loose or strict hop. A list of sub-objects specifies an explicit route to the egress router for an LSP",
                                  "readOnly": false,
                                  "path": "../config/hop-address",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "hop-type": {
                                  "description": "Use this attribute to configure rsvp path hop type as either loose or strict hop.",
                                  "readOnly": false,
                                  "path": "../config/hop-type",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "config": {
                                  "description": "configuration container for rsvp mpls path hop",
                                  "readOnly": false,
                                  "type": "object",
                                  "properties": {
                                    "hop-address": {
                                      "description": "Use this attribute to define an explicit IPv4 or IPv6 route sub-object as either loose or strict hop. A list of sub-objects specifies an explicit route to the egress router for an LSP",
                                      "readOnly": false,
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                      "type": "string",
                                      "mandatory": false
                                    },
                                    "hop-type": {
                                      "description": "Use this attribute to configure rsvp path hop type as either loose or strict hop.",
                                      "readOnly": false,
                                      "enum": [
                                        "loose",
                                        "strict"
                                      ],
                                      "mandatory": false
                                    }
                                  }
                                },
                                "state": {
                                  "description": "state parameters related to rsvp path",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "hop-address": {
                                      "description": "Use this attribute to define an explicit IPv4 or IPv6 route sub-object as either loose or strict hop. A list of sub-objects specifies an explicit route to the egress router for an LSP",
                                      "readOnly": true,
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                      "type": "string",
                                      "mandatory": false
                                    },
                                    "hop-type": {
                                      "description": "Use this attribute to configure rsvp path hop type as either loose or strict hop.",
                                      "readOnly": true,
                                      "enum": [
                                        "loose",
                                        "strict"
                                      ],
                                      "mandatory": false
                                    }
                                  }
                                }
                              },
                              "keyFields": [
                                "hop-address",
                                "hop-type"
                              ]
                            }
                          }
                        }
                      },
                      "gmpls-strict-hops": {
                        "description": "configuration container for rsvp path gmpls strict hops",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "gmpls-strict-hop": {
                            "description": "configuration container for rsvp path gmpls strict hop",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strict-hop-address": {
                                  "description": "Use this attribute to define an ERO path for a numbered (IPv4) interface. Only strict hops can be configured, and the strict type is implicit.",
                                  "readOnly": false,
                                  "path": "../config/strict-hop-address",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "config": {
                                  "description": "configuration container for rsvp path gmpls strict hop",
                                  "readOnly": false,
                                  "type": "object",
                                  "properties": {
                                    "strict-hop-address": {
                                      "description": "Use this attribute to define an ERO path for a numbered (IPv4) interface. Only strict hops can be configured, and the strict type is implicit.",
                                      "readOnly": false,
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                      "type": "string",
                                      "mandatory": false
                                    }
                                  }
                                },
                                "state": {
                                  "description": "state parameters related to rsvp path gmpls strict hop",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "strict-hop-address": {
                                      "description": "Use this attribute to define an ERO path for a numbered (IPv4) interface. Only strict hops can be configured, and the strict type is implicit.",
                                      "readOnly": true,
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                      "type": "string",
                                      "mandatory": false
                                    }
                                  }
                                }
                              },
                              "keyFields": [
                                "strict-hop-address"
                              ]
                            }
                          }
                        }
                      },
                      "gmpls-unnumbered-entry": {
                        "description": "Top level container for rsvp path unnumbered ip address",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "gmpls-unnumbered-hop": {
                            "description": "objectlist for rsvp path unnumbered path",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "unnumbered-ip-addr": {
                                  "description": "Use this attribute to define an ERO path for an unnumbered interface. Both the router ID and the link ID must be entered.",
                                  "readOnly": false,
                                  "path": "../config/unnumbered-ip-addr",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "link-id": {
                                  "description": "Use this attribute to define an link ID for the unnumbered interface",
                                  "readOnly": false,
                                  "path": "../config/link-id",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "config": {
                                  "description": "configuration container for rsvp unnumbered path with link id",
                                  "readOnly": false,
                                  "type": "object",
                                  "properties": {
                                    "unnumbered-ip-addr": {
                                      "description": "Use this attribute to define an ERO path for an unnumbered interface. Both the router ID and the link ID must be entered.",
                                      "readOnly": false,
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                      "type": "string",
                                      "mandatory": false
                                    },
                                    "link-id": {
                                      "description": "Use this attribute to define an link ID for the unnumbered interface",
                                      "readOnly": false,
                                      "minimum": 1,
                                      "maximum": 4294967295,
                                      "type": "number",
                                      "mandatory": false
                                    }
                                  }
                                },
                                "state": {
                                  "description": "state parameters related to rsvp path unnumbered path with link id",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "unnumbered-ip-addr": {
                                      "description": "Use this attribute to define an ERO path for an unnumbered interface. Both the router ID and the link ID must be entered.",
                                      "readOnly": true,
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                      "type": "string",
                                      "mandatory": false
                                    },
                                    "link-id": {
                                      "description": "Use this attribute to define an link ID for the unnumbered interface",
                                      "readOnly": true,
                                      "minimum": 1,
                                      "maximum": 4294967295,
                                      "type": "number",
                                      "mandatory": false
                                    }
                                  }
                                }
                              },
                              "keyFields": [
                                "unnumbered-ip-addr",
                                "link-id"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "keyFields": [
                  "path-name"
                ]
              }
            }
          }
        },
        "multipaths": {
          "description": "container for the rsvp multipath group",
          "readOnly": false,
          "type": "object",
          "properties": {
            "multipath": {
              "description": "list of rsvp multipath groups",
              "readOnly": false,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "multipath-name": {
                    "description": "Use this attribute to create the multipath group name",
                    "readOnly": false,
                    "path": "../config/multipath-name",
                    "type": "string",
                    "mandatory": false
                  },
                  "config": {
                    "description": "configuration container for rsvp multipath group",
                    "readOnly": false,
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "Use this attribute to add description for multipath group",
                        "readOnly": false,
                        "pattern": "[^?'=,>|]*",
                        "type": "string",
                        "mandatory": false
                      },
                      "destination": {
                        "description": "Use this attribute to add destination prefix for multipath group",
                        "readOnly": false,
                        "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                        "type": "string",
                        "mandatory": false
                      },
                      "multipath-name": {
                        "description": "Use this attribute to create a new RSVP multipath group or to enter the multipath configure mode. In this mode, you can add or delete description for the multipath group.",
                        "readOnly": false,
                        "minLength": 1,
                        "maxLength": 1965,
                        "pattern": "[^?' =,>|]+",
                        "type": "string",
                        "mandatory": false
                      }
                    }
                  },
                  "state": {
                    "description": "state container for rsvp multipath group",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "Use this attribute to add description for multipath group",
                        "readOnly": true,
                        "pattern": "[^?'=,>|]*",
                        "type": "string",
                        "mandatory": false
                      },
                      "destination": {
                        "description": "Use this attribute to add destination prefix for multipath group",
                        "readOnly": true,
                        "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                        "type": "string",
                        "mandatory": false
                      },
                      "multipath-name": {
                        "description": "Use this attribute to create a new RSVP multipath group or to enter the multipath configure mode. In this mode, you can add or delete description for the multipath group.",
                        "readOnly": true,
                        "minLength": 1,
                        "maxLength": 1965,
                        "pattern": "[^?' =,>|]+",
                        "type": "string",
                        "mandatory": false
                      },
                      "multipath-identifier": {
                        "description": "Identifier of multipath group",
                        "readOnly": true,
                        "type": "number",
                        "minimum": 0,
                        "maximum": 65535,
                        "mandatory": false
                      },
                      "member-trunk-count": {
                        "description": "Number of member trunks of multipath group",
                        "readOnly": true,
                        "type": "number",
                        "minimum": 0,
                        "maximum": 65535,
                        "mandatory": false
                      }
                    }
                  },
                  "member-trunks": {
                    "description": "State level container for multipath member trunks",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "member-trunk": {
                        "description": "State level list for multipath member trunks",
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "trunk-name": {
                              "description": "Name of the member trunk",
                              "readOnly": true,
                              "path": "../state/trunk-name",
                              "type": "string",
                              "mandatory": false
                            },
                            "state": {
                              "description": "state container for member trunks",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "trunk-name": {
                                  "description": "Name of the member trunk",
                                  "readOnly": true,
                                  "minLength": 1,
                                  "maxLength": 1965,
                                  "pattern": "[^?' =,>|]+",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "trunk-identifier": {
                                  "description": "Identifier of the member trunk",
                                  "readOnly": true,
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 4294967295,
                                  "mandatory": false
                                },
                                "trunk-status": {
                                  "description": "Status of the member trunk",
                                  "readOnly": true,
                                  "enum": [
                                    "inactive",
                                    "active"
                                  ],
                                  "mandatory": false
                                }
                              }
                            }
                          },
                          "keyFields": [
                            "trunk-name"
                          ]
                        }
                      }
                    }
                  }
                },
                "keyFields": [
                  "multipath-name"
                ]
              }
            }
          }
        },
        "trunks": {
          "description": "trunk infomrmation",
          "readOnly": false,
          "type": "object",
          "properties": {
            "bypass-trunks": {
              "description": "list of bypass trunks",
              "readOnly": false,
              "type": "object",
              "properties": {
                "bypass-trunk": {
                  "description": "list of bypass trunk",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bypass-name": {
                        "description": "rsvp trunk bypass name",
                        "readOnly": false,
                        "path": "../config/bypass-name",
                        "type": "string",
                        "mandatory": false
                      },
                      "config": {
                        "description": "configuration container for rsvp bypass trunk",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "bypass-name": {
                            "description": "Use this attribute to create a new RSVP Bypass Tunnel or to modify existing RSVP Bypass Tunnel",
                            "readOnly": false,
                            "minLength": 1,
                            "maxLength": 32,
                            "pattern": "[^?' =,>|]+",
                            "type": "string",
                            "mandatory": false
                          },
                          "backup-bandwidth-type": {
                            "description": "rsvp bypass trunk backup bandwidth type",
                            "readOnly": false,
                            "enum": [
                              "best-effort",
                              "dedicated"
                            ],
                            "mandatory": false
                          },
                          "ingress": {
                            "description": "Use this attribute to specify a from IPv4 address for the RSVP daemon. In the RSVP trunk mode, this command indicates a sender's address in the sender template object that is used in path messages.",
                            "readOnly": false,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "egress": {
                            "description": "Use this attribute to specify an IPv4 egress for an LSP. When configuring an LSP, you must specify the address of the egress router by using this command in the trunk node. An egress definition is a mandatory attribute; no RSVP session is created when an egress is not defined.",
                            "readOnly": false,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "ext-tunnel-id": {
                            "description": "Use this attribute to configure an extended-tunnel identifier as an IPv4/IPv6 address. These identifiers are used in RSVP messages. If no extended-tunnel ID is specified, the LSR-ID for the router is used as the extended-tunnel ID for all LSPs. The extended-tunnel ID is a simple way of identifying all LSPs belonging to the same trunk.",
                            "readOnly": false,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "update-type": {
                            "description": "Use this attribute to change the method of updating attributes for sessions (primary/ secondary) for this trunk as either make-before-break (default) or break-before-make",
                            "readOnly": false,
                            "enum": [
                              "break-before-make",
                              "make-before-break"
                            ],
                            "mandatory": false
                          },
                          "description": {
                            "description": "Use this attribute to add description for rsvp tunnel",
                            "readOnly": false,
                            "pattern": "[^?'=,>|]*",
                            "type": "string",
                            "mandatory": false
                          }
                        }
                      },
                      "state": {
                        "description": "state parameters related to rsvp bypass trunk",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "bypass-name": {
                            "description": "Use this attribute to create a new RSVP Bypass Tunnel or to modify existing RSVP Bypass Tunnel",
                            "readOnly": true,
                            "minLength": 1,
                            "maxLength": 32,
                            "pattern": "[^?' =,>|]+",
                            "type": "string",
                            "mandatory": false
                          },
                          "backup-bandwidth-type": {
                            "description": "rsvp bypass trunk backup bandwidth type",
                            "readOnly": true,
                            "enum": [
                              "best-effort",
                              "dedicated"
                            ],
                            "mandatory": false
                          },
                          "ingress": {
                            "description": "Use this attribute to specify a from IPv4 address for the RSVP daemon. In the RSVP trunk mode, this command indicates a sender's address in the sender template object that is used in path messages.",
                            "readOnly": true,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "egress": {
                            "description": "Use this attribute to specify an IPv4 egress for an LSP. When configuring an LSP, you must specify the address of the egress router by using this command in the trunk node. An egress definition is a mandatory attribute; no RSVP session is created when an egress is not defined.",
                            "readOnly": true,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "ext-tunnel-id": {
                            "description": "Use this attribute to configure an extended-tunnel identifier as an IPv4/IPv6 address. These identifiers are used in RSVP messages. If no extended-tunnel ID is specified, the LSR-ID for the router is used as the extended-tunnel ID for all LSPs. The extended-tunnel ID is a simple way of identifying all LSPs belonging to the same trunk.",
                            "readOnly": true,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "update-type": {
                            "description": "Use this attribute to change the method of updating attributes for sessions (primary/ secondary) for this trunk as either make-before-break (default) or break-before-make",
                            "readOnly": true,
                            "enum": [
                              "break-before-make",
                              "make-before-break"
                            ],
                            "mandatory": false
                          },
                          "description": {
                            "description": "Use this attribute to add description for rsvp tunnel",
                            "readOnly": true,
                            "pattern": "[^?'=,>|]*",
                            "type": "string",
                            "mandatory": false
                          }
                        }
                      },
                      "session": {
                        "description": "rsvp bypass trunk session",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "config": {
                            "description": "configuration container for rsvp session",
                            "readOnly": false,
                            "type": "object",
                            "properties": {
                              "traffic-type": {
                                "description": "Use this attribute to identify the traffic type for this RSVP Trunk/bypss/P2MP LSP's",
                                "readOnly": false,
                                "enum": [
                                  "controlled-load",
                                  "guaranteed"
                                ],
                                "mandatory": false
                              },
                              "retry-count": {
                                "description": "Use this attribute to specify a retry count for an RSVP Trunk.",
                                "readOnly": false,
                                "minimum": 1,
                                "maximum": 65535,
                                "type": "number",
                                "mandatory": false
                              },
                              "retry-interval": {
                                "description": "Use this attribute to specify a retry interval for an RSVP Trunk. When an ingress node tries to configure an LSP and the setup fails due to the receipt of a Path Error message, the system waits for the time configured with this command, before retrying the LSP setup process",
                                "readOnly": false,
                                "minimum": 1,
                                "maximum": 600,
                                "type": "number",
                                "mandatory": false
                              },
                              "disable-route-record": {
                                "description": "Use this attribute to enable recording of the route taken by Path and Reservation Request (Resv) messages. These messages confirm the establishment of reservations and also identifies errors. Routes are recorded by means of the Route Record Object (RRO) in the RSVP message.",
                                "readOnly": false,
                                "type": "array",
                                "items": {
                                  "type": "null"
                                },
                                "maxItems": 1,
                                "mandatory": false
                              },
                              "enable-reuse-route-record": {
                                "description": "Use this attribute to use the updated Route Record List as an Explicit Route (with all strict nodes) when a path message is sent out at the next refresh.",
                                "readOnly": false,
                                "type": "array",
                                "items": {
                                  "type": "null"
                                },
                                "maxItems": 1,
                                "mandatory": false
                              },
                              "cspf-retry-count": {
                                "description": "Use this attribute to specify the number of retries that CSPF should carry out for a request received from RSVP.",
                                "readOnly": false,
                                "minimum": 1,
                                "maximum": 65535,
                                "type": "number",
                                "mandatory": false
                              },
                              "cspf-retry-interval": {
                                "description": "Use this attribute to specify the time between each retry that CSPF might carry out for a request received from RSVP.",
                                "readOnly": false,
                                "minimum": 1,
                                "maximum": 600,
                                "type": "number",
                                "mandatory": false
                              }
                            }
                          },
                          "state": {
                            "description": "state container for rsvp session",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "traffic-type": {
                                "description": "Use this attribute to identify the traffic type for this RSVP Trunk/bypss/P2MP LSP's",
                                "readOnly": true,
                                "enum": [
                                  "controlled-load",
                                  "guaranteed"
                                ],
                                "mandatory": false
                              },
                              "retry-count": {
                                "description": "Use this attribute to specify a retry count for an RSVP Trunk.",
                                "readOnly": true,
                                "minimum": 1,
                                "maximum": 65535,
                                "type": "number",
                                "mandatory": false
                              },
                              "retry-interval": {
                                "description": "Use this attribute to specify a retry interval for an RSVP Trunk. When an ingress node tries to configure an LSP and the setup fails due to the receipt of a Path Error message, the system waits for the time configured with this command, before retrying the LSP setup process",
                                "readOnly": true,
                                "minimum": 1,
                                "maximum": 600,
                                "type": "number",
                                "mandatory": false
                              },
                              "disable-route-record": {
                                "description": "Use this attribute to enable recording of the route taken by Path and Reservation Request (Resv) messages. These messages confirm the establishment of reservations and also identifies errors. Routes are recorded by means of the Route Record Object (RRO) in the RSVP message.",
                                "readOnly": true,
                                "type": "array",
                                "items": {
                                  "type": "null"
                                },
                                "maxItems": 1,
                                "mandatory": false
                              },
                              "enable-reuse-route-record": {
                                "description": "Use this attribute to use the updated Route Record List as an Explicit Route (with all strict nodes) when a path message is sent out at the next refresh.",
                                "readOnly": true,
                                "type": "array",
                                "items": {
                                  "type": "null"
                                },
                                "maxItems": 1,
                                "mandatory": false
                              },
                              "cspf-retry-count": {
                                "description": "Use this attribute to specify the number of retries that CSPF should carry out for a request received from RSVP.",
                                "readOnly": true,
                                "minimum": 1,
                                "maximum": 65535,
                                "type": "number",
                                "mandatory": false
                              },
                              "cspf-retry-interval": {
                                "description": "Use this attribute to specify the time between each retry that CSPF might carry out for a request received from RSVP.",
                                "readOnly": true,
                                "minimum": 1,
                                "maximum": 600,
                                "type": "number",
                                "mandatory": false
                              }
                            }
                          },
                          "exclude-path": {
                            "description": "configuration container for rsvp bypass trunk exclude path address",
                            "readOnly": false,
                            "type": "object",
                            "properties": {
                              "config": {
                                "description": "configuration container for rsvp exclude path address",
                                "readOnly": false,
                                "type": "object",
                                "properties": {
                                  "exclude-type": {
                                    "description": "Use this attribute to exclude path typeas either link or node protection",
                                    "readOnly": false,
                                    "enum": [
                                      "link",
                                      "node"
                                    ],
                                    "mandatory": true
                                  },
                                  "exclude-addr": {
                                    "description": "Use this attribute to exclude an address link or address node from the LSP creation of the Bypass Tunnel.",
                                    "readOnly": false,
                                    "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                    "type": "string",
                                    "mandatory": true
                                  }
                                }
                              },
                              "state": {
                                "description": "state container for rsvp exclude path address",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "exclude-type": {
                                    "description": "Use this attribute to exclude path typeas either link or node protection",
                                    "readOnly": true,
                                    "enum": [
                                      "link",
                                      "node"
                                    ],
                                    "mandatory": true
                                  },
                                  "exclude-addr": {
                                    "description": "Use this attribute to exclude an address link or address node from the LSP creation of the Bypass Tunnel.",
                                    "readOnly": true,
                                    "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                    "type": "string",
                                    "mandatory": true
                                  }
                                }
                              }
                            }
                          },
                          "path-state-block": {
                            "description": "configuration container for rsvp bypass trunk psb session",
                            "readOnly": false,
                            "type": "object",
                            "properties": {
                              "config": {
                                "description": "configuration container for rsvp session psb",
                                "readOnly": false,
                                "type": "object",
                                "properties": {
                                  "bandwidth": {
                                    "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                    "readOnly": false,
                                    "minLength": 1,
                                    "maxLength": 1965,
                                    "pattern": "[^?' =,>|]+",
                                    "type": "string",
                                    "mandatory": false
                                  },
                                  "path-name": {
                                    "description": "Use this attribute to specify an RSVP path to be used.The PATHNAME in this command is the string (name) used to identify an RSVP path defined for the node",
                                    "readOnly": false,
                                    "minLength": 1,
                                    "maxLength": 1965,
                                    "pattern": "[^?' =,>|]+",
                                    "type": "string",
                                    "mandatory": false
                                  }
                                }
                              },
                              "state": {
                                "description": "state container for rsvp session psb",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "bandwidth": {
                                    "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                    "readOnly": true,
                                    "minLength": 1,
                                    "maxLength": 1965,
                                    "pattern": "[^?' =,>|]+",
                                    "type": "string",
                                    "mandatory": false
                                  },
                                  "path-name": {
                                    "description": "Use this attribute to specify an RSVP path to be used.The PATHNAME in this command is the string (name) used to identify an RSVP path defined for the node",
                                    "readOnly": true,
                                    "minLength": 1,
                                    "maxLength": 1965,
                                    "pattern": "[^?' =,>|]+",
                                    "type": "string",
                                    "mandatory": false
                                  }
                                }
                              },
                              "session-attributes": {
                                "description": "configuration container for rsvp bypass trunk psb session attributes",
                                "readOnly": false,
                                "type": "object",
                                "properties": {
                                  "config": {
                                    "description": "configuration container for rsvp session attr",
                                    "readOnly": false,
                                    "type": "object",
                                    "properties": {
                                      "bandwidth": {
                                        "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                        "readOnly": false,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "hold-priority": {
                                        "description": "Use this attribute to configure the hold priority value for the selected trunk.",
                                        "readOnly": false,
                                        "minimum": 0,
                                        "maximum": 7,
                                        "type": "number",
                                        "mandatory": false
                                      },
                                      "setup-priority": {
                                        "description": "Use this attribute to configure the setup priority value for the selected trunk",
                                        "readOnly": false,
                                        "minimum": 0,
                                        "maximum": 7,
                                        "type": "number",
                                        "mandatory": false
                                      },
                                      "enable-label-record": {
                                        "description": "Use this attribute to record all labels exchanged between RSVP-enabled routers during the reservation setup process",
                                        "readOnly": false,
                                        "type": "array",
                                        "items": {
                                          "type": "null"
                                        },
                                        "maxItems": 1,
                                        "mandatory": false
                                      },
                                      "hop-limit": {
                                        "description": "Use this attribute to specify a limit of hops for an RSVP trunk. Hop-limit data is sent to the CSPF server if CSPF is used.",
                                        "readOnly": false,
                                        "minimum": 1,
                                        "maximum": 255,
                                        "type": "number",
                                        "mandatory": false
                                      },
                                      "filter-type": {
                                        "description": "Use this attribute to set the filter to fixed or shared filter style for RSVP trunk.",
                                        "readOnly": false,
                                        "enum": [
                                          "fixed",
                                          "shared-explicit"
                                        ],
                                        "mandatory": false
                                      }
                                    }
                                  },
                                  "state": {
                                    "description": "state container for rsvp session attr",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "bandwidth": {
                                        "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                        "readOnly": true,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "hold-priority": {
                                        "description": "Use this attribute to configure the hold priority value for the selected trunk.",
                                        "readOnly": true,
                                        "minimum": 0,
                                        "maximum": 7,
                                        "type": "number",
                                        "mandatory": false
                                      },
                                      "setup-priority": {
                                        "description": "Use this attribute to configure the setup priority value for the selected trunk",
                                        "readOnly": true,
                                        "minimum": 0,
                                        "maximum": 7,
                                        "type": "number",
                                        "mandatory": false
                                      },
                                      "enable-label-record": {
                                        "description": "Use this attribute to record all labels exchanged between RSVP-enabled routers during the reservation setup process",
                                        "readOnly": true,
                                        "type": "array",
                                        "items": {
                                          "type": "null"
                                        },
                                        "maxItems": 1,
                                        "mandatory": false
                                      },
                                      "hop-limit": {
                                        "description": "Use this attribute to specify a limit of hops for an RSVP trunk. Hop-limit data is sent to the CSPF server if CSPF is used.",
                                        "readOnly": true,
                                        "minimum": 1,
                                        "maximum": 255,
                                        "type": "number",
                                        "mandatory": false
                                      },
                                      "filter-type": {
                                        "description": "Use this attribute to set the filter to fixed or shared filter style for RSVP trunk.",
                                        "readOnly": true,
                                        "enum": [
                                          "fixed",
                                          "shared-explicit"
                                        ],
                                        "mandatory": false
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "diff-serv-info": {
                            "description": "configuration container for rsvp bypass trunk diff serve information",
                            "readOnly": false,
                            "type": "object",
                            "properties": {
                              "config": {
                                "description": "configuration container for rsvp bypass trunk llsp class",
                                "readOnly": false,
                                "type": "object",
                                "properties": {
                                  "llsp-class": {
                                    "description": "to configure a Differentiated Services Label-Only-Inferred-PSC (Diff-Serv L-LSP) that uses Diff-Serv Class as its PHB Scheduling Class (PSC).",
                                    "readOnly": false,
                                    "minLength": 1,
                                    "maxLength": 1965,
                                    "pattern": "[^?' =,>|]+",
                                    "type": "string",
                                    "mandatory": false
                                  }
                                }
                              },
                              "state": {
                                "description": "state container for rsvp bypass trunk llsp class",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "llsp-class": {
                                    "description": "to configure a Differentiated Services Label-Only-Inferred-PSC (Diff-Serv L-LSP) that uses Diff-Serv Class as its PHB Scheduling Class (PSC).",
                                    "readOnly": true,
                                    "minLength": 1,
                                    "maxLength": 1965,
                                    "pattern": "[^?' =,>|]+",
                                    "type": "string",
                                    "mandatory": false
                                  }
                                }
                              },
                              "dscp-exp-maps": {
                                "description": "Top Level lists for dscp exp",
                                "readOnly": false,
                                "type": "object",
                                "properties": {
                                  "dscp-exp-map": {
                                    "description": "Top Level list for dscp exp",
                                    "readOnly": false,
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "dscp-exp-map-exp-val": {
                                          "description": "rsvp trunk dsinfo exp val",
                                          "readOnly": false,
                                          "path": "../config/dscp-exp-map-exp-val",
                                          "type": "string",
                                          "mandatory": false
                                        },
                                        "config": {
                                          "description": "configuration container for rsvp bypass trunk dscp exp map",
                                          "readOnly": false,
                                          "type": "object",
                                          "properties": {
                                            "dscp-exp-map-exp-val": {
                                              "description": "Use this attribute to configure the private PHB-EXP (Per-Hop Behavior-Experimental) mapping only used by this ELSP (EXP-Inferred-PSC LSP). This mapping is different from the node level PHB-EXP mapping.",
                                              "readOnly": false,
                                              "minimum": 0,
                                              "maximum": 7,
                                              "type": "number",
                                              "mandatory": false
                                            },
                                            "dscp-exp-map-class-name": {
                                              "description": "Use this attribute to configure Diffserv class alias like be ef af11 for the class-to-exp-bit mapping",
                                              "readOnly": false,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": true
                                            }
                                          }
                                        },
                                        "state": {
                                          "description": "State container for rsvp bypass trunk dscp exp map",
                                          "readOnly": true,
                                          "type": "object",
                                          "properties": {
                                            "dscp-exp-map-exp-val": {
                                              "description": "Use this attribute to configure the private PHB-EXP (Per-Hop Behavior-Experimental) mapping only used by this ELSP (EXP-Inferred-PSC LSP). This mapping is different from the node level PHB-EXP mapping.",
                                              "readOnly": true,
                                              "minimum": 0,
                                              "maximum": 7,
                                              "type": "number",
                                              "mandatory": false
                                            },
                                            "dscp-exp-map-class-name": {
                                              "description": "Use this attribute to configure Diffserv class alias like be ef af11 for the class-to-exp-bit mapping",
                                              "readOnly": true,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": true
                                            }
                                          }
                                        }
                                      },
                                      "keyFields": [
                                        "dscp-exp-map-exp-val"
                                      ]
                                    }
                                  }
                                }
                              },
                              "elsp-class": {
                                "description": "configuration container for rsvp bypass trunk elsp class",
                                "readOnly": false,
                                "type": "object",
                                "properties": {
                                  "config": {
                                    "description": "configuration container for rsvp llsp class",
                                    "readOnly": false,
                                    "type": "object",
                                    "properties": {
                                      "elsp-signal": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface.",
                                        "readOnly": false,
                                        "type": "array",
                                        "items": {
                                          "type": "null"
                                        },
                                        "maxItems": 1,
                                        "mandatory": false
                                      },
                                      "elsp-signal-class1": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class1",
                                        "readOnly": false,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class2": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class2",
                                        "readOnly": false,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class3": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class3",
                                        "readOnly": false,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class4": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class4",
                                        "readOnly": false,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class5": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class5",
                                        "readOnly": false,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class6": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class6",
                                        "readOnly": false,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class7": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class7",
                                        "readOnly": false,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      }
                                    }
                                  },
                                  "state": {
                                    "description": "state container for rsvp llsp class",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "elsp-signal": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface.",
                                        "readOnly": true,
                                        "type": "array",
                                        "items": {
                                          "type": "null"
                                        },
                                        "maxItems": 1,
                                        "mandatory": false
                                      },
                                      "elsp-signal-class1": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class1",
                                        "readOnly": true,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class2": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class2",
                                        "readOnly": true,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class3": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class3",
                                        "readOnly": true,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class4": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class4",
                                        "readOnly": true,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class5": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class5",
                                        "readOnly": true,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class6": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class6",
                                        "readOnly": true,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "elsp-signal-class7": {
                                        "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class7",
                                        "readOnly": true,
                                        "minLength": 1,
                                        "maxLength": 1965,
                                        "pattern": "[^?' =,>|]+",
                                        "type": "string",
                                        "mandatory": false
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "keyFields": [
                      "bypass-name"
                    ]
                  }
                }
              }
            },
            "ingress-trunks": {
              "description": "list of the ingress trunks",
              "readOnly": false,
              "type": "object",
              "properties": {
                "ingress-trunk": {
                  "description": "list of the ingress trunk",
                  "readOnly": false,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "trunk-name": {
                        "description": "rsvp trunk name",
                        "readOnly": false,
                        "path": "../config/trunk-name",
                        "type": "string",
                        "mandatory": false
                      },
                      "config": {
                        "description": "configuration container for rsvp ingress trunk",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "bsid-value": {
                            "description": "Use this attribute to configure static binding segment identifier value",
                            "readOnly": false,
                            "minimum": 16,
                            "maximum": 15999,
                            "type": "number",
                            "mandatory": false
                          },
                          "trunk-color": {
                            "description": "Use this attribute to configure color for RSVP Trunk",
                            "readOnly": false,
                            "minimum": 1,
                            "maximum": 4294967295,
                            "type": "number",
                            "mandatory": false
                          },
                          "ingress": {
                            "description": "Use this attribute to specify a from IPv4 address for the RSVP daemon. In the RSVP trunk mode, this command indicates a sender's address in the sender template object that is used in path messages.",
                            "readOnly": false,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "egress": {
                            "description": "Use this attribute to specify an IPv4 egress for an LSP. When configuring an LSP, you must specify the address of the egress router by using this command in the trunk node. An egress definition is a mandatory attribute; no RSVP session is created when an egress is not defined.",
                            "readOnly": false,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "ext-tunnel-id": {
                            "description": "Use this attribute to configure an extended-tunnel identifier as an IPv4/IPv6 address. These identifiers are used in RSVP messages. If no extended-tunnel ID is specified, the LSR-ID for the router is used as the extended-tunnel ID for all LSPs. The extended-tunnel ID is a simple way of identifying all LSPs belonging to the same trunk.",
                            "readOnly": false,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "update-type": {
                            "description": "Use this attribute to change the method of updating attributes for sessions (primary/ secondary) for this trunk as either make-before-break (default) or break-before-make",
                            "readOnly": false,
                            "enum": [
                              "break-before-make",
                              "make-before-break"
                            ],
                            "mandatory": false
                          },
                          "description": {
                            "description": "Use this attribute to add description for rsvp tunnel",
                            "readOnly": false,
                            "pattern": "[^?'=,>|]*",
                            "type": "string",
                            "mandatory": false
                          },
                          "trunk-name": {
                            "description": "Use this attribute to create a new RSVP trunk. When the trunk is created, the attributes required to configure an explicitly-routed or traditionally-routed LSP are set. Once a trunk is configured with the required attributes, an RSVP session (and PSB) is created for this trunk, which enables the exchange of messages and completes the LSP setup",
                            "readOnly": false,
                            "minLength": 1,
                            "maxLength": 32,
                            "pattern": "[^?' =,>|]+",
                            "type": "string",
                            "mandatory": false
                          },
                          "trunk-family": {
                            "description": "Use this attribute to configure the trunk type as IPV4 or IPV6 or GMPLS",
                            "readOnly": false,
                            "enum": [
                              "gmpls",
                              "ipv4",
                              "ipv6"
                            ],
                            "mandatory": true
                          },
                          "enable-igp-shortcut": {
                            "description": "Use this attrinute to enable Interior Gateway Protocol (IGP) Shortcut. With IGP Shortcut, link-state IGPs calculate IP routes to forward traffic over tunnels configured by TE.",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "null"
                            },
                            "maxItems": 1,
                            "mandatory": false
                          },
                          "absolute-metric": {
                            "description": "Use this attribute to set LSP absolute metric metric for IGP Shortcut use",
                            "readOnly": false,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          },
                          "relative-metric": {
                            "description": "Use this attribute to set LSP relative metric metric for IGP Shortcut use",
                            "readOnly": false,
                            "oneOf": [
                              {
                                "minimum": "-65535",
                                "maximum": "0 ",
                                "type": "number"
                              },
                              {
                                "minimum": " 1",
                                "maximum": "65535",
                                "type": "number"
                              }
                            ],
                            "type": "number",
                            "minimum": -2147483648,
                            "maximum": 2147483647,
                            "mandatory": false
                          },
                          "revert-timer": {
                            "description": "Use this attribute configure the Hold-on timer before revert back to RSVP session",
                            "readOnly": false,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          },
                          "enable-reoptimize": {
                            "description": "Use this attribute to enable the reoptimization for the RSVP Trunk",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "null"
                            },
                            "maxItems": 1,
                            "mandatory": false
                          },
                          "multipath-group": {
                            "description": "Use this attribute to configure a multipath group name for the RSVP Trunk",
                            "readOnly": false,
                            "path": "/ipi-rsvp:rsvp-te/multipaths/multipath/config/multipath-name",
                            "type": "string",
                            "mandatory": false
                          }
                        }
                      },
                      "state": {
                        "description": "state container for rsvp ingress trunk",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "bsid-value": {
                            "description": "Use this attribute to configure static binding segment identifier value",
                            "readOnly": true,
                            "minimum": 16,
                            "maximum": 15999,
                            "type": "number",
                            "mandatory": false
                          },
                          "trunk-color": {
                            "description": "Use this attribute to configure color for RSVP Trunk",
                            "readOnly": true,
                            "minimum": 1,
                            "maximum": 4294967295,
                            "type": "number",
                            "mandatory": false
                          },
                          "ingress": {
                            "description": "Use this attribute to specify a from IPv4 address for the RSVP daemon. In the RSVP trunk mode, this command indicates a sender's address in the sender template object that is used in path messages.",
                            "readOnly": true,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "egress": {
                            "description": "Use this attribute to specify an IPv4 egress for an LSP. When configuring an LSP, you must specify the address of the egress router by using this command in the trunk node. An egress definition is a mandatory attribute; no RSVP session is created when an egress is not defined.",
                            "readOnly": true,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "ext-tunnel-id": {
                            "description": "Use this attribute to configure an extended-tunnel identifier as an IPv4/IPv6 address. These identifiers are used in RSVP messages. If no extended-tunnel ID is specified, the LSR-ID for the router is used as the extended-tunnel ID for all LSPs. The extended-tunnel ID is a simple way of identifying all LSPs belonging to the same trunk.",
                            "readOnly": true,
                            "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                            "type": "string",
                            "mandatory": false
                          },
                          "update-type": {
                            "description": "Use this attribute to change the method of updating attributes for sessions (primary/ secondary) for this trunk as either make-before-break (default) or break-before-make",
                            "readOnly": true,
                            "enum": [
                              "break-before-make",
                              "make-before-break"
                            ],
                            "mandatory": false
                          },
                          "description": {
                            "description": "Use this attribute to add description for rsvp tunnel",
                            "readOnly": true,
                            "pattern": "[^?'=,>|]*",
                            "type": "string",
                            "mandatory": false
                          },
                          "trunk-name": {
                            "description": "Use this attribute to create a new RSVP trunk. When the trunk is created, the attributes required to configure an explicitly-routed or traditionally-routed LSP are set. Once a trunk is configured with the required attributes, an RSVP session (and PSB) is created for this trunk, which enables the exchange of messages and completes the LSP setup",
                            "readOnly": true,
                            "minLength": 1,
                            "maxLength": 32,
                            "pattern": "[^?' =,>|]+",
                            "type": "string",
                            "mandatory": false
                          },
                          "trunk-family": {
                            "description": "Use this attribute to configure the trunk type as IPV4 or IPV6 or GMPLS",
                            "readOnly": true,
                            "enum": [
                              "gmpls",
                              "ipv4",
                              "ipv6"
                            ],
                            "mandatory": true
                          },
                          "enable-igp-shortcut": {
                            "description": "Use this attrinute to enable Interior Gateway Protocol (IGP) Shortcut. With IGP Shortcut, link-state IGPs calculate IP routes to forward traffic over tunnels configured by TE.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "null"
                            },
                            "maxItems": 1,
                            "mandatory": false
                          },
                          "absolute-metric": {
                            "description": "Use this attribute to set LSP absolute metric metric for IGP Shortcut use",
                            "readOnly": true,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          },
                          "relative-metric": {
                            "description": "Use this attribute to set LSP relative metric metric for IGP Shortcut use",
                            "readOnly": true,
                            "oneOf": [
                              {
                                "minimum": "-65535",
                                "maximum": "0 ",
                                "type": "number"
                              },
                              {
                                "minimum": " 1",
                                "maximum": "65535",
                                "type": "number"
                              }
                            ],
                            "type": "number",
                            "minimum": -2147483648,
                            "maximum": 2147483647,
                            "mandatory": false
                          },
                          "revert-timer": {
                            "description": "Use this attribute configure the Hold-on timer before revert back to RSVP session",
                            "readOnly": true,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          },
                          "enable-reoptimize": {
                            "description": "Use this attribute to enable the reoptimization for the RSVP Trunk",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "null"
                            },
                            "maxItems": 1,
                            "mandatory": false
                          },
                          "multipath-group": {
                            "description": "Use this attribute to configure a multipath group name for the RSVP Trunk",
                            "readOnly": true,
                            "path": "/ipi-rsvp:rsvp-te/multipaths/multipath/config/multipath-name",
                            "type": "string",
                            "mandatory": false
                          }
                        }
                      },
                      "path-computation-element": {
                        "description": "Top level configuration container for path computation element",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "config": {
                            "description": "configuration container for rsvp path computation element",
                            "readOnly": false,
                            "type": "object",
                            "properties": {
                              "path-option-dynamic": {
                                "description": "Use the attribute to enable Tunnel to get ERO from Path Computation Element",
                                "readOnly": false,
                                "enum": [
                                  "pce"
                                ],
                                "mandatory": false
                              },
                              "pce-entity-identifier": {
                                "description": "Use this attribute to assign PCE Entity ID for the tunnel",
                                "readOnly": false,
                                "minimum": 1,
                                "maximum": 255,
                                "type": "number",
                                "mandatory": false
                              },
                              "pce-state-report": {
                                "description": "Use this attribute to enable or disable lsp state report to PCE",
                                "readOnly": false,
                                "type": "array",
                                "items": {
                                  "type": "null"
                                },
                                "maxItems": 1,
                                "mandatory": false
                              },
                              "pce-lsp-delegate": {
                                "description": "Use this attribute to enable or disable lsp delegation to PCE",
                                "readOnly": false,
                                "type": "array",
                                "items": {
                                  "type": "null"
                                },
                                "maxItems": 1,
                                "mandatory": false
                              }
                            }
                          },
                          "state": {
                            "description": "state container for rsvp path computation element",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "path-option-dynamic": {
                                "description": "Use the attribute to enable Tunnel to get ERO from Path Computation Element",
                                "readOnly": true,
                                "enum": [
                                  "pce"
                                ],
                                "mandatory": false
                              },
                              "pce-entity-identifier": {
                                "description": "Use this attribute to assign PCE Entity ID for the tunnel",
                                "readOnly": true,
                                "minimum": 1,
                                "maximum": 255,
                                "type": "number",
                                "mandatory": false
                              },
                              "pce-state-report": {
                                "description": "Use this attribute to enable or disable lsp state report to PCE",
                                "readOnly": true,
                                "type": "array",
                                "items": {
                                  "type": "null"
                                },
                                "maxItems": 1,
                                "mandatory": false
                              },
                              "pce-lsp-delegate": {
                                "description": "Use this attribute to enable or disable lsp delegation to PCE",
                                "readOnly": true,
                                "type": "array",
                                "items": {
                                  "type": "null"
                                },
                                "maxItems": 1,
                                "mandatory": false
                              }
                            }
                          }
                        }
                      },
                      "mapped-ip-routes": {
                        "description": "list of ingress trunk ipv4 mapped routes",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "mapped-ip-route": {
                            "description": "list of ingress trunk ipv4 mapped route",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "description": "rsvp trunk ipv4 map route address",
                                  "readOnly": false,
                                  "path": "../config/address",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "config": {
                                  "description": "configuration container for rsvp ingress trunk",
                                  "readOnly": false,
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "description": "rsvp trunk ipv4 map route address",
                                      "readOnly": false,
                                      "minLength": 0,
                                      "maxLength": 32,
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))",
                                      "type": "string",
                                      "mandatory": false
                                    }
                                  }
                                },
                                "state": {
                                  "description": "state container for rsvp ingress trunk",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "description": "rsvp trunk ipv4 map route address",
                                      "readOnly": true,
                                      "minLength": 0,
                                      "maxLength": 32,
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))",
                                      "type": "string",
                                      "mandatory": false
                                    }
                                  }
                                }
                              },
                              "keyFields": [
                                "address"
                              ]
                            }
                          }
                        }
                      },
                      "mapped-prefix-class-routes": {
                        "description": "list of ingress trunk mapped routes",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "mapped-prefix-class-route": {
                            "description": "list of ingress trunk mapped route",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dst-addr": {
                                  "description": "rsvp trunk map route address",
                                  "readOnly": false,
                                  "path": "../config/dst-addr",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "config": {
                                  "description": "configuration container for rsvp mapped route",
                                  "readOnly": false,
                                  "type": "object",
                                  "properties": {
                                    "dst-addr": {
                                      "description": "Use this attribute to map a route using an IPv4 to an RSVP trunk. If the primary LSP for a trunk goes down, all mapped routes are sent automatically to a secondary LSP configured as backup for a primary LSP.",
                                      "readOnly": false,
                                      "minLength": 0,
                                      "maxLength": 32,
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))",
                                      "type": "string",
                                      "mandatory": true
                                    },
                                    "name": {
                                      "description": "Use this attribute to map a route using an IPv4 to Incoming DiffServ Class (for example, be, ef, etc.) to map to the RSVP trunk.",
                                      "readOnly": false,
                                      "minLength": 1,
                                      "maxLength": 1965,
                                      "pattern": "[^?' =,>|]+",
                                      "type": "string",
                                      "mandatory": true
                                    }
                                  }
                                },
                                "state": {
                                  "description": "state container for rsvp mapped route",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "dst-addr": {
                                      "description": "Use this attribute to map a route using an IPv4 to an RSVP trunk. If the primary LSP for a trunk goes down, all mapped routes are sent automatically to a secondary LSP configured as backup for a primary LSP.",
                                      "readOnly": true,
                                      "minLength": 0,
                                      "maxLength": 32,
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))",
                                      "type": "string",
                                      "mandatory": true
                                    },
                                    "name": {
                                      "description": "Use this attribute to map a route using an IPv4 to Incoming DiffServ Class (for example, be, ef, etc.) to map to the RSVP trunk.",
                                      "readOnly": true,
                                      "minLength": 1,
                                      "maxLength": 1965,
                                      "pattern": "[^?' =,>|]+",
                                      "type": "string",
                                      "mandatory": true
                                    }
                                  }
                                }
                              },
                              "keyFields": [
                                "dst-addr"
                              ]
                            }
                          }
                        }
                      },
                      "secondary-priorities": {
                        "description": "list of ingress trunk secondary priorities",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "secondary-priority": {
                            "description": "list of ingress trunk secondary priority",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "priority-value": {
                                  "description": "Use this attribute to configure the secondary priorities of the RSVP Trunk.",
                                  "readOnly": false,
                                  "path": "../config/priority-value",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "config": {
                                  "description": "configuration container for rsvp secondary priority LSP",
                                  "readOnly": false,
                                  "type": "object",
                                  "properties": {
                                    "bandwidth": {
                                      "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                      "readOnly": false,
                                      "minLength": 1,
                                      "maxLength": 1965,
                                      "pattern": "[^?' =,>|]+",
                                      "type": "string",
                                      "mandatory": false
                                    },
                                    "priority-value": {
                                      "description": "Use this attribute to configure the secondary priorities of the RSVP Trunk.",
                                      "readOnly": false,
                                      "minimum": 1,
                                      "maximum": 5,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "priority-path": {
                                      "description": "Use this attribute to configure the secondary priority path for the RSVP Trunk.",
                                      "readOnly": false,
                                      "minLength": 1,
                                      "maxLength": 1965,
                                      "pattern": "[^?' =,>|]+",
                                      "type": "string",
                                      "mandatory": false
                                    },
                                    "secondary-priority-srlg-disjoint": {
                                      "description": "Use this attribute to configure the SRLG disjoint path for the RSVP Trunk.",
                                      "readOnly": false,
                                      "enum": [
                                        "forced",
                                        "preferred"
                                      ],
                                      "mandatory": false
                                    },
                                    "hold-priority": {
                                      "description": "Use this attribute to configure the secondary hold priority for the RSVP Trunk.",
                                      "readOnly": false,
                                      "minimum": 0,
                                      "maximum": 7,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "setup-priority": {
                                      "description": "Use this attribute to configure the secondary setup priority for the RSVP Trunk.",
                                      "readOnly": false,
                                      "minimum": 0,
                                      "maximum": 7,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "enable-label-record": {
                                      "description": "Use this attribute to configure the secondary label record for the RSVP Trunk.",
                                      "readOnly": false,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "hop-limit": {
                                      "description": "Use this attribute to configure the secondary hop limit for the RSVP Trunk.",
                                      "readOnly": false,
                                      "minimum": 1,
                                      "maximum": 255,
                                      "type": "number",
                                      "mandatory": false
                                    }
                                  }
                                },
                                "state": {
                                  "description": "state container for rsvp mpls path hop",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "bandwidth": {
                                      "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                      "readOnly": true,
                                      "minLength": 1,
                                      "maxLength": 1965,
                                      "pattern": "[^?' =,>|]+",
                                      "type": "string",
                                      "mandatory": false
                                    },
                                    "priority-value": {
                                      "description": "Use this attribute to configure the secondary priorities of the RSVP Trunk.",
                                      "readOnly": true,
                                      "minimum": 1,
                                      "maximum": 5,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "priority-path": {
                                      "description": "Use this attribute to configure the secondary priority path for the RSVP Trunk.",
                                      "readOnly": true,
                                      "minLength": 1,
                                      "maxLength": 1965,
                                      "pattern": "[^?' =,>|]+",
                                      "type": "string",
                                      "mandatory": false
                                    },
                                    "secondary-priority-srlg-disjoint": {
                                      "description": "Use this attribute to configure the SRLG disjoint path for the RSVP Trunk.",
                                      "readOnly": true,
                                      "enum": [
                                        "forced",
                                        "preferred"
                                      ],
                                      "mandatory": false
                                    },
                                    "hold-priority": {
                                      "description": "Use this attribute to configure the secondary hold priority for the RSVP Trunk.",
                                      "readOnly": true,
                                      "minimum": 0,
                                      "maximum": 7,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "setup-priority": {
                                      "description": "Use this attribute to configure the secondary setup priority for the RSVP Trunk.",
                                      "readOnly": true,
                                      "minimum": 0,
                                      "maximum": 7,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "enable-label-record": {
                                      "description": "Use this attribute to configure the secondary label record for the RSVP Trunk.",
                                      "readOnly": true,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "hop-limit": {
                                      "description": "Use this attribute to configure the secondary hop limit for the RSVP Trunk.",
                                      "readOnly": true,
                                      "minimum": 1,
                                      "maximum": 255,
                                      "type": "number",
                                      "mandatory": false
                                    }
                                  }
                                }
                              },
                              "keyFields": [
                                "priority-value"
                              ]
                            }
                          }
                        }
                      },
                      "sessions": {
                        "description": "configuration container for rsvp ingress trunk sessions container",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "session": {
                            "description": "list of ingress trunk session details",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "trunk-session-type": {
                                  "description": "rsvp trunk session type",
                                  "readOnly": false,
                                  "path": "../config/trunk-session-type",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "config": {
                                  "description": "configuration container for rsvp session",
                                  "readOnly": false,
                                  "type": "object",
                                  "properties": {
                                    "traffic-type": {
                                      "description": "Use this attribute to identify the traffic type for this RSVP Trunk/bypss/P2MP LSP's",
                                      "readOnly": false,
                                      "enum": [
                                        "controlled-load",
                                        "guaranteed"
                                      ],
                                      "mandatory": false
                                    },
                                    "retry-count": {
                                      "description": "Use this attribute to specify a retry count for an RSVP Trunk.",
                                      "readOnly": false,
                                      "minimum": 1,
                                      "maximum": 65535,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "retry-interval": {
                                      "description": "Use this attribute to specify a retry interval for an RSVP Trunk. When an ingress node tries to configure an LSP and the setup fails due to the receipt of a Path Error message, the system waits for the time configured with this command, before retrying the LSP setup process",
                                      "readOnly": false,
                                      "minimum": 1,
                                      "maximum": 600,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "disable-route-record": {
                                      "description": "Use this attribute to enable recording of the route taken by Path and Reservation Request (Resv) messages. These messages confirm the establishment of reservations and also identifies errors. Routes are recorded by means of the Route Record Object (RRO) in the RSVP message.",
                                      "readOnly": false,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "enable-reuse-route-record": {
                                      "description": "Use this attribute to use the updated Route Record List as an Explicit Route (with all strict nodes) when a path message is sent out at the next refresh.",
                                      "readOnly": false,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "cspf-retry-count": {
                                      "description": "Use this attribute to specify the number of retries that CSPF should carry out for a request received from RSVP.",
                                      "readOnly": false,
                                      "minimum": 1,
                                      "maximum": 65535,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "cspf-retry-interval": {
                                      "description": "Use this attribute to specify the time between each retry that CSPF might carry out for a request received from RSVP.",
                                      "readOnly": false,
                                      "minimum": 1,
                                      "maximum": 600,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "trunk-session-type": {
                                      "description": "Use this attribute to configure the session is primary or secondary",
                                      "readOnly": false,
                                      "enum": [
                                        "secondary",
                                        "primary"
                                      ],
                                      "mandatory": false
                                    },
                                    "disable-cspf": {
                                      "description": "Use this attribute to enable the use of Constrained Shortest Path First (CSPF) server for an explicit route to the egress, or all RSVP sessions. When CSPF is turned off globally, it cannot be enabled for any LSP.",
                                      "readOnly": false,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "disable-affinity": {
                                      "description": "Use this attribute to enable sending of session attribute objects with resource affinity data.",
                                      "readOnly": false,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "enable-elsp-pre-config": {
                                      "description": "Use this attribute to configure a Differentiated Services (Diff-Serv) pre-configured E-LSP (EXP-Inferred-PSC LSP)",
                                      "readOnly": false,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "enable-local-protection": {
                                      "description": "Use this attribute to enable the local repair of explicit routes for which this router is a transit node.",
                                      "readOnly": false,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    }
                                  }
                                },
                                "state": {
                                  "description": "state container for rsvp session",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "traffic-type": {
                                      "description": "Use this attribute to identify the traffic type for this RSVP Trunk/bypss/P2MP LSP's",
                                      "readOnly": true,
                                      "enum": [
                                        "controlled-load",
                                        "guaranteed"
                                      ],
                                      "mandatory": false
                                    },
                                    "retry-count": {
                                      "description": "Use this attribute to specify a retry count for an RSVP Trunk.",
                                      "readOnly": true,
                                      "minimum": 1,
                                      "maximum": 65535,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "retry-interval": {
                                      "description": "Use this attribute to specify a retry interval for an RSVP Trunk. When an ingress node tries to configure an LSP and the setup fails due to the receipt of a Path Error message, the system waits for the time configured with this command, before retrying the LSP setup process",
                                      "readOnly": true,
                                      "minimum": 1,
                                      "maximum": 600,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "disable-route-record": {
                                      "description": "Use this attribute to enable recording of the route taken by Path and Reservation Request (Resv) messages. These messages confirm the establishment of reservations and also identifies errors. Routes are recorded by means of the Route Record Object (RRO) in the RSVP message.",
                                      "readOnly": true,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "enable-reuse-route-record": {
                                      "description": "Use this attribute to use the updated Route Record List as an Explicit Route (with all strict nodes) when a path message is sent out at the next refresh.",
                                      "readOnly": true,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "cspf-retry-count": {
                                      "description": "Use this attribute to specify the number of retries that CSPF should carry out for a request received from RSVP.",
                                      "readOnly": true,
                                      "minimum": 1,
                                      "maximum": 65535,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "cspf-retry-interval": {
                                      "description": "Use this attribute to specify the time between each retry that CSPF might carry out for a request received from RSVP.",
                                      "readOnly": true,
                                      "minimum": 1,
                                      "maximum": 600,
                                      "type": "number",
                                      "mandatory": false
                                    },
                                    "trunk-session-type": {
                                      "description": "Use this attribute to configure the session is primary or secondary",
                                      "readOnly": true,
                                      "enum": [
                                        "secondary",
                                        "primary"
                                      ],
                                      "mandatory": false
                                    },
                                    "disable-cspf": {
                                      "description": "Use this attribute to enable the use of Constrained Shortest Path First (CSPF) server for an explicit route to the egress, or all RSVP sessions. When CSPF is turned off globally, it cannot be enabled for any LSP.",
                                      "readOnly": true,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "disable-affinity": {
                                      "description": "Use this attribute to enable sending of session attribute objects with resource affinity data.",
                                      "readOnly": true,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "enable-elsp-pre-config": {
                                      "description": "Use this attribute to configure a Differentiated Services (Diff-Serv) pre-configured E-LSP (EXP-Inferred-PSC LSP)",
                                      "readOnly": true,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    },
                                    "enable-local-protection": {
                                      "description": "Use this attribute to enable the local repair of explicit routes for which this router is a transit node.",
                                      "readOnly": true,
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "maxItems": 1,
                                      "mandatory": false
                                    }
                                  }
                                },
                                "admin-groups": {
                                  "description": "list of ingress trunk admin groups",
                                  "readOnly": false,
                                  "type": "object",
                                  "properties": {
                                    "admin-group": {
                                      "description": "list of ingress trunk admin group",
                                      "readOnly": false,
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "rsvp admin group name",
                                            "readOnly": false,
                                            "path": "../config/name",
                                            "type": "string",
                                            "mandatory": false
                                          },
                                          "config": {
                                            "description": "configuration container for rsvp admin group",
                                            "readOnly": false,
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "iUse this attribute to configure primary administrative groups. Administrative groups are manually assigned attributes that describe the color of links, so that links with the same color are in one class. These groups are used to implement different policy-based LSP setups. Administrative group attributes can be included or excluded for an LSP or for a path's primary and secondary paths",
                                                "readOnly": false,
                                                "minLength": 1,
                                                "maxLength": 1965,
                                                "pattern": "[^?' =,>|]+",
                                                "type": "string",
                                                "mandatory": false
                                              },
                                              "type": {
                                                "description": "Use this attribute to configure the type is include-any or include-all or exclude-any",
                                                "readOnly": false,
                                                "enum": [
                                                  "exclude-any",
                                                  "include-any",
                                                  "include-all"
                                                ],
                                                "mandatory": false
                                              }
                                            }
                                          },
                                          "state": {
                                            "description": "state container for rsvp admin group",
                                            "readOnly": true,
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "iUse this attribute to configure primary administrative groups. Administrative groups are manually assigned attributes that describe the color of links, so that links with the same color are in one class. These groups are used to implement different policy-based LSP setups. Administrative group attributes can be included or excluded for an LSP or for a path's primary and secondary paths",
                                                "readOnly": true,
                                                "minLength": 1,
                                                "maxLength": 1965,
                                                "pattern": "[^?' =,>|]+",
                                                "type": "string",
                                                "mandatory": false
                                              },
                                              "type": {
                                                "description": "Use this attribute to configure the type is include-any or include-all or exclude-any",
                                                "readOnly": true,
                                                "enum": [
                                                  "exclude-any",
                                                  "include-any",
                                                  "include-all"
                                                ],
                                                "mandatory": false
                                              }
                                            }
                                          }
                                        },
                                        "keyFields": [
                                          "name"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "path-state-block": {
                                  "description": "configuration container for rsvp ingress trunk psb session",
                                  "readOnly": false,
                                  "type": "object",
                                  "properties": {
                                    "config": {
                                      "description": "configuration container for rsvp session psb",
                                      "readOnly": false,
                                      "type": "object",
                                      "properties": {
                                        "bandwidth": {
                                          "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                          "readOnly": false,
                                          "minLength": 1,
                                          "maxLength": 1965,
                                          "pattern": "[^?' =,>|]+",
                                          "type": "string",
                                          "mandatory": false
                                        },
                                        "path-name": {
                                          "description": "Use this attribute to configure the path",
                                          "readOnly": false,
                                          "path": "/ipi-rsvp:rsvp-te/rsvp-paths/rsvp-path/config/path-name",
                                          "type": "string",
                                          "mandatory": false
                                        },
                                        "class-type-name": {
                                          "description": "Use this attribute to configure a Class-Type for an LSP session.",
                                          "readOnly": false,
                                          "minLength": 1,
                                          "maxLength": 1965,
                                          "pattern": "[^?' =,>|]+",
                                          "type": "string",
                                          "mandatory": false
                                        }
                                      }
                                    },
                                    "state": {
                                      "description": "state container for rsvp session psb",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "bandwidth": {
                                          "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                          "readOnly": true,
                                          "minLength": 1,
                                          "maxLength": 1965,
                                          "pattern": "[^?' =,>|]+",
                                          "type": "string",
                                          "mandatory": false
                                        },
                                        "path-name": {
                                          "description": "Use this attribute to configure the path",
                                          "readOnly": true,
                                          "path": "/ipi-rsvp:rsvp-te/rsvp-paths/rsvp-path/config/path-name",
                                          "type": "string",
                                          "mandatory": false
                                        },
                                        "class-type-name": {
                                          "description": "Use this attribute to configure a Class-Type for an LSP session.",
                                          "readOnly": true,
                                          "minLength": 1,
                                          "maxLength": 1965,
                                          "pattern": "[^?' =,>|]+",
                                          "type": "string",
                                          "mandatory": false
                                        }
                                      }
                                    },
                                    "session-attributes": {
                                      "description": "configuration container for rsvp ingress trunk psb session attributes",
                                      "readOnly": false,
                                      "type": "object",
                                      "properties": {
                                        "config": {
                                          "description": "configuration container for rsvp session attrs",
                                          "readOnly": false,
                                          "type": "object",
                                          "properties": {
                                            "bandwidth": {
                                              "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                              "readOnly": false,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "hold-priority": {
                                              "description": "Use this attribute to configure the hold priority value for the selected trunk.",
                                              "readOnly": false,
                                              "minimum": 0,
                                              "maximum": 7,
                                              "type": "number",
                                              "mandatory": false
                                            },
                                            "setup-priority": {
                                              "description": "Use this attribute to configure the setup priority value for the selected trunk",
                                              "readOnly": false,
                                              "minimum": 0,
                                              "maximum": 7,
                                              "type": "number",
                                              "mandatory": false
                                            },
                                            "enable-label-record": {
                                              "description": "Use this attribute to record all labels exchanged between RSVP-enabled routers during the reservation setup process",
                                              "readOnly": false,
                                              "type": "array",
                                              "items": {
                                                "type": "null"
                                              },
                                              "maxItems": 1,
                                              "mandatory": false
                                            },
                                            "hop-limit": {
                                              "description": "Use this attribute to specify a limit of hops for an RSVP trunk. Hop-limit data is sent to the CSPF server if CSPF is used.",
                                              "readOnly": false,
                                              "minimum": 1,
                                              "maximum": 255,
                                              "type": "number",
                                              "mandatory": false
                                            },
                                            "filter-type": {
                                              "description": "Use this attribute to set the filter to fixed or shared filter style for RSVP trunk.",
                                              "readOnly": false,
                                              "enum": [
                                                "fixed",
                                                "shared-explicit"
                                              ],
                                              "mandatory": false
                                            }
                                          }
                                        },
                                        "state": {
                                          "description": "state container for rsvp session attrs",
                                          "readOnly": true,
                                          "type": "object",
                                          "properties": {
                                            "bandwidth": {
                                              "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                              "readOnly": true,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "hold-priority": {
                                              "description": "Use this attribute to configure the hold priority value for the selected trunk.",
                                              "readOnly": true,
                                              "minimum": 0,
                                              "maximum": 7,
                                              "type": "number",
                                              "mandatory": false
                                            },
                                            "setup-priority": {
                                              "description": "Use this attribute to configure the setup priority value for the selected trunk",
                                              "readOnly": true,
                                              "minimum": 0,
                                              "maximum": 7,
                                              "type": "number",
                                              "mandatory": false
                                            },
                                            "enable-label-record": {
                                              "description": "Use this attribute to record all labels exchanged between RSVP-enabled routers during the reservation setup process",
                                              "readOnly": true,
                                              "type": "array",
                                              "items": {
                                                "type": "null"
                                              },
                                              "maxItems": 1,
                                              "mandatory": false
                                            },
                                            "hop-limit": {
                                              "description": "Use this attribute to specify a limit of hops for an RSVP trunk. Hop-limit data is sent to the CSPF server if CSPF is used.",
                                              "readOnly": true,
                                              "minimum": 1,
                                              "maximum": 255,
                                              "type": "number",
                                              "mandatory": false
                                            },
                                            "filter-type": {
                                              "description": "Use this attribute to set the filter to fixed or shared filter style for RSVP trunk.",
                                              "readOnly": true,
                                              "enum": [
                                                "fixed",
                                                "shared-explicit"
                                              ],
                                              "mandatory": false
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "diff-serv-info": {
                                  "description": "configuration container for rsvp ingress trunk diff serve information",
                                  "readOnly": false,
                                  "type": "object",
                                  "properties": {
                                    "config": {
                                      "description": "configuration container for rsvp dscp exp mpls",
                                      "readOnly": false,
                                      "type": "object",
                                      "properties": {
                                        "llsp-class": {
                                          "description": "to configure a Differentiated Services Label-Only-Inferred-PSC (Diff-Serv L-LSP) that uses Diff-Serv Class as its PHB Scheduling Class (PSC).",
                                          "readOnly": false,
                                          "minLength": 1,
                                          "maxLength": 1965,
                                          "pattern": "[^?' =,>|]+",
                                          "type": "string",
                                          "mandatory": false
                                        }
                                      }
                                    },
                                    "state": {
                                      "description": "state container for rsvp dscp exp mpls",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "llsp-class": {
                                          "description": "to configure a Differentiated Services Label-Only-Inferred-PSC (Diff-Serv L-LSP) that uses Diff-Serv Class as its PHB Scheduling Class (PSC).",
                                          "readOnly": true,
                                          "minLength": 1,
                                          "maxLength": 1965,
                                          "pattern": "[^?' =,>|]+",
                                          "type": "string",
                                          "mandatory": false
                                        }
                                      }
                                    },
                                    "dscp-exp-maps": {
                                      "description": "Top Level lists for dscp exp",
                                      "readOnly": false,
                                      "type": "object",
                                      "properties": {
                                        "dscp-exp-map": {
                                          "description": "Top Level list for dscp exp",
                                          "readOnly": false,
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "dscp-exp-map-exp-val": {
                                                "description": "rsvp trunk dsinfo exp val",
                                                "readOnly": false,
                                                "path": "../config/dscp-exp-map-exp-val",
                                                "type": "string",
                                                "mandatory": false
                                              },
                                              "config": {
                                                "description": "configuration container for rsvp ingress trunk dscp exp map",
                                                "readOnly": false,
                                                "type": "object",
                                                "properties": {
                                                  "dscp-exp-map-exp-val": {
                                                    "description": "Use this attribute to configure the private PHB-EXP (Per-Hop Behavior-Experimental) mapping only used by this ELSP (EXP-Inferred-PSC LSP). This mapping is different from the node level PHB-EXP mapping.",
                                                    "readOnly": false,
                                                    "minimum": 0,
                                                    "maximum": 7,
                                                    "type": "number",
                                                    "mandatory": false
                                                  },
                                                  "dscp-exp-map-class-name": {
                                                    "description": "Use this attribute to configure the Diffserv class alias like be ef af11 for the class-to-exp-bit mapping",
                                                    "readOnly": false,
                                                    "minLength": 1,
                                                    "maxLength": 1965,
                                                    "pattern": "[^?' =,>|]+",
                                                    "type": "string",
                                                    "mandatory": true
                                                  }
                                                }
                                              },
                                              "state": {
                                                "description": "State container for rsvp ingress trunk dscp exp map",
                                                "readOnly": true,
                                                "type": "object",
                                                "properties": {
                                                  "dscp-exp-map-exp-val": {
                                                    "description": "Use this attribute to configure the private PHB-EXP (Per-Hop Behavior-Experimental) mapping only used by this ELSP (EXP-Inferred-PSC LSP). This mapping is different from the node level PHB-EXP mapping.",
                                                    "readOnly": true,
                                                    "minimum": 0,
                                                    "maximum": 7,
                                                    "type": "number",
                                                    "mandatory": false
                                                  },
                                                  "dscp-exp-map-class-name": {
                                                    "description": "Use this attribute to configure the Diffserv class alias like be ef af11 for the class-to-exp-bit mapping",
                                                    "readOnly": true,
                                                    "minLength": 1,
                                                    "maxLength": 1965,
                                                    "pattern": "[^?' =,>|]+",
                                                    "type": "string",
                                                    "mandatory": true
                                                  }
                                                }
                                              }
                                            },
                                            "keyFields": [
                                              "dscp-exp-map-exp-val"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "elsp-class": {
                                      "description": "configuration container for rsvp ingress trunk elsp class",
                                      "readOnly": false,
                                      "type": "object",
                                      "properties": {
                                        "config": {
                                          "description": "configuration container for rsvp elsp class",
                                          "readOnly": false,
                                          "type": "object",
                                          "properties": {
                                            "elsp-signal": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface.",
                                              "readOnly": false,
                                              "type": "array",
                                              "items": {
                                                "type": "null"
                                              },
                                              "maxItems": 1,
                                              "mandatory": false
                                            },
                                            "elsp-signal-class1": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class1",
                                              "readOnly": false,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class2": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class2",
                                              "readOnly": false,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class3": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class3",
                                              "readOnly": false,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class4": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class4",
                                              "readOnly": false,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class5": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class5",
                                              "readOnly": false,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class6": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class6",
                                              "readOnly": false,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class7": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class7",
                                              "readOnly": false,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            }
                                          }
                                        },
                                        "state": {
                                          "description": "state container for rsvp elsp class",
                                          "readOnly": true,
                                          "type": "object",
                                          "properties": {
                                            "elsp-signal": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface.",
                                              "readOnly": true,
                                              "type": "array",
                                              "items": {
                                                "type": "null"
                                              },
                                              "maxItems": 1,
                                              "mandatory": false
                                            },
                                            "elsp-signal-class1": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class1",
                                              "readOnly": true,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class2": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class2",
                                              "readOnly": true,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class3": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class3",
                                              "readOnly": true,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class4": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class4",
                                              "readOnly": true,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class5": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class5",
                                              "readOnly": true,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class6": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class6",
                                              "readOnly": true,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "elsp-signal-class7": {
                                              "description": "Use this attribute to configure a primary Diff-Serv (Differentiated Services) explicitly signaled E-LSP (EXP-InferredPSC LSP) interface class7",
                                              "readOnly": true,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "keyFields": [
                                "trunk-session-type"
                              ]
                            }
                          },
                          "fast-reroute": {
                            "description": "configuration container for rsvp ingress session fast reroute",
                            "readOnly": false,
                            "type": "object",
                            "properties": {
                              "config": {
                                "description": "configuration container for rsvp sessions fast reroute",
                                "readOnly": false,
                                "type": "object",
                                "properties": {
                                  "fast-reroute-bandwidth": {
                                    "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                    "readOnly": false,
                                    "minLength": 1,
                                    "maxLength": 1965,
                                    "pattern": "[^?' =,>|]+",
                                    "type": "string",
                                    "mandatory": false
                                  },
                                  "protection": {
                                    "description": "Use this attribute to create an Fast Reroute backup and to set an LSP one-to-one protection mechanism. This command can also be used to create an FRR Facility (Bypass) backup and assign a Facility Backup (Bypass Tunnel) available to the protected LSP.",
                                    "readOnly": false,
                                    "enum": [
                                      "one-to-one",
                                      "facility"
                                    ],
                                    "mandatory": false
                                  },
                                  "enable-node-protection": {
                                    "description": "Use this attribute to configure fast-reroute node-protection",
                                    "readOnly": false,
                                    "type": "array",
                                    "items": {
                                      "type": "null"
                                    },
                                    "maxItems": 1,
                                    "mandatory": false
                                  },
                                  "frr-hold-priority": {
                                    "description": "Use this attribute to configure the hold priority value for the selected trunk.",
                                    "readOnly": false,
                                    "minimum": 0,
                                    "maximum": 7,
                                    "type": "number",
                                    "mandatory": false
                                  },
                                  "frr-setup-priority": {
                                    "description": "Use this attribute to configure the setup priority value for the selected trunk",
                                    "readOnly": false,
                                    "minimum": 0,
                                    "maximum": 7,
                                    "type": "number",
                                    "mandatory": false
                                  },
                                  "frr-hop-limit": {
                                    "description": "Use this attribute to specify a limit of hops for an RSVP trunk. Hop-limit data is sent to the CSPF server if CSPF is used.",
                                    "readOnly": false,
                                    "minimum": 1,
                                    "maximum": 255,
                                    "type": "number",
                                    "mandatory": false
                                  }
                                }
                              },
                              "state": {
                                "description": "state container for rsvp sessions fast reroute",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "fast-reroute-bandwidth": {
                                    "description": "Use this attribute to reserve the primary/secondary bandwidth in bits per second for the current trunk.",
                                    "readOnly": true,
                                    "minLength": 1,
                                    "maxLength": 1965,
                                    "pattern": "[^?' =,>|]+",
                                    "type": "string",
                                    "mandatory": false
                                  },
                                  "protection": {
                                    "description": "Use this attribute to create an Fast Reroute backup and to set an LSP one-to-one protection mechanism. This command can also be used to create an FRR Facility (Bypass) backup and assign a Facility Backup (Bypass Tunnel) available to the protected LSP.",
                                    "readOnly": true,
                                    "enum": [
                                      "one-to-one",
                                      "facility"
                                    ],
                                    "mandatory": false
                                  },
                                  "enable-node-protection": {
                                    "description": "Use this attribute to configure fast-reroute node-protection",
                                    "readOnly": true,
                                    "type": "array",
                                    "items": {
                                      "type": "null"
                                    },
                                    "maxItems": 1,
                                    "mandatory": false
                                  },
                                  "frr-hold-priority": {
                                    "description": "Use this attribute to configure the hold priority value for the selected trunk.",
                                    "readOnly": true,
                                    "minimum": 0,
                                    "maximum": 7,
                                    "type": "number",
                                    "mandatory": false
                                  },
                                  "frr-setup-priority": {
                                    "description": "Use this attribute to configure the setup priority value for the selected trunk",
                                    "readOnly": true,
                                    "minimum": 0,
                                    "maximum": 7,
                                    "type": "number",
                                    "mandatory": false
                                  },
                                  "frr-hop-limit": {
                                    "description": "Use this attribute to specify a limit of hops for an RSVP trunk. Hop-limit data is sent to the CSPF server if CSPF is used.",
                                    "readOnly": true,
                                    "minimum": 1,
                                    "maximum": 255,
                                    "type": "number",
                                    "mandatory": false
                                  }
                                }
                              },
                              "frr-admin-groups": {
                                "description": "list of ingress trunk fast reroute admin groups",
                                "readOnly": false,
                                "type": "object",
                                "properties": {
                                  "frr-admin-group": {
                                    "description": "list of ingress trunk fast reroute admin group",
                                    "readOnly": false,
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "admin-group-name": {
                                          "description": "rsvp admin group name",
                                          "readOnly": false,
                                          "path": "../config/admin-group-name",
                                          "type": "string",
                                          "mandatory": false
                                        },
                                        "config": {
                                          "description": "configuration container for rsvp fast-reroute-admin-group",
                                          "readOnly": false,
                                          "type": "object",
                                          "properties": {
                                            "admin-group-name": {
                                              "description": "Use this attribute to configure administrative groups for use with a bypass LSP configuration. Administrative groups are assigned attributes that describe the color of links, so that links with the same color are in one class. Administrative groups are used to implement different policy-based LSP setups",
                                              "readOnly": false,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "admin-group-type": {
                                              "description": "Use this attribute to configure administrative groups for use with a bypass LSP configuration as either exclude-any or include-any. Administrative groups are assigned attributes that describe the color of links, so that links with the same color are in one class. Administrative groups are used to implement different policy-based LSP setups",
                                              "readOnly": false,
                                              "enum": [
                                                "exclude-any",
                                                "include-any"
                                              ],
                                              "mandatory": false
                                            }
                                          }
                                        },
                                        "state": {
                                          "description": "state container for rsvp fast-reroute-admin-group",
                                          "readOnly": true,
                                          "type": "object",
                                          "properties": {
                                            "admin-group-name": {
                                              "description": "Use this attribute to configure administrative groups for use with a bypass LSP configuration. Administrative groups are assigned attributes that describe the color of links, so that links with the same color are in one class. Administrative groups are used to implement different policy-based LSP setups",
                                              "readOnly": true,
                                              "minLength": 1,
                                              "maxLength": 1965,
                                              "pattern": "[^?' =,>|]+",
                                              "type": "string",
                                              "mandatory": false
                                            },
                                            "admin-group-type": {
                                              "description": "Use this attribute to configure administrative groups for use with a bypass LSP configuration as either exclude-any or include-any. Administrative groups are assigned attributes that describe the color of links, so that links with the same color are in one class. Administrative groups are used to implement different policy-based LSP setups",
                                              "readOnly": true,
                                              "enum": [
                                                "exclude-any",
                                                "include-any"
                                              ],
                                              "mandatory": false
                                            }
                                          }
                                        }
                                      },
                                      "keyFields": [
                                        "admin-group-name"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "srlg": {
                            "description": "Top level container Shared Risk Link Groups for secondary backup LSPs    or fast-reroute LSPs",
                            "readOnly": false,
                            "type": "object",
                            "properties": {
                              "config": {
                                "description": "configuration container for Shared Risk Link Groups",
                                "readOnly": false,
                                "type": "object",
                                "properties": {
                                  "srlg-disjoint-secondary": {
                                    "description": "Use this attribute to enable secondary srlg disjoint",
                                    "readOnly": false,
                                    "enum": [
                                      "forced",
                                      "preferred"
                                    ],
                                    "mandatory": false
                                  }
                                }
                              },
                              "state": {
                                "description": "state container for Shared Risk Link Groups",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "srlg-disjoint-secondary": {
                                    "description": "Use this attribute to enable secondary srlg disjoint",
                                    "readOnly": true,
                                    "enum": [
                                      "forced",
                                      "preferred"
                                    ],
                                    "mandatory": false
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "keyFields": [
                      "trunk-name"
                    ]
                  }
                }
              }
            },
            "trunk": {
              "description": "Top level list for rsvp trunk",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "trunk-id": {
                    "description": "Trunk identifier",
                    "readOnly": true,
                    "path": "../sessions/session/state/trunk-id",
                    "type": "string",
                    "mandatory": false
                  },
                  "extended-tunnel-id": {
                    "description": "Extended-tunnel identifier of the trunk",
                    "readOnly": true,
                    "path": "../sessions/session/state/extended-tunnel-id",
                    "type": "string",
                    "mandatory": false
                  },
                  "egress": {
                    "description": "Egress endpoint address for the trunk",
                    "readOnly": true,
                    "path": "../sessions/session/state/egress",
                    "type": "string",
                    "mandatory": false
                  },
                  "multipath-group-name": {
                    "description": "Multipath group name associated with the trunk",
                    "readOnly": true,
                    "minLength": 1,
                    "maxLength": 1965,
                    "pattern": "[^?' =,>|]+",
                    "type": "string",
                    "mandatory": false
                  },
                  "multipath-group-identifier": {
                    "description": "Multipath group identifier associated with the trunk",
                    "readOnly": true,
                    "type": "number",
                    "minimum": 0,
                    "maximum": 65535,
                    "mandatory": false
                  },
                  "sessions": {
                    "description": "State level container for all rsvp session parameters",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "session": {
                        "description": "State level list for all rsvp session parameters",
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "session-name": {
                              "description": "Name of the session",
                              "readOnly": true,
                              "path": "../state/session-name",
                              "type": "string",
                              "mandatory": false
                            },
                            "state": {
                              "description": "Top level list for rsvp session parameters",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "received-explicit-route-object": {
                                  "description": "Top level list for received explicit route object parameters",
                                  "readOnly": true,
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "link-address": {
                                        "description": "Explict route object ip address",
                                        "readOnly": true,
                                        "path": "../state/link-address",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "state": {
                                        "description": "State level container for all rsvp session received explicit route    object parameters",
                                        "readOnly": true,
                                        "type": "object",
                                        "properties": {
                                          "link-address": {
                                            "description": "Explict route object ip address",
                                            "readOnly": true,
                                            "oneOf": [
                                              {
                                                "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                                "type": "string"
                                              },
                                              {
                                                "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                                "type": "string"
                                              }
                                            ],
                                            "mandatory": false
                                          },
                                          "link-type": {
                                            "description": "Explict route object Path type",
                                            "readOnly": true,
                                            "enum": [
                                              "loose",
                                              "strict"
                                            ],
                                            "mandatory": false
                                          }
                                        }
                                      }
                                    },
                                    "keyFields": [
                                      "link-address"
                                    ]
                                  }
                                },
                                "explicit-route-object": {
                                  "description": "Top level list for explicit route object parameters",
                                  "readOnly": true,
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "link-address": {
                                        "description": "Explict route object ip address",
                                        "readOnly": true,
                                        "path": "../state/link-address",
                                        "type": "string",
                                        "mandatory": false
                                      },
                                      "state": {
                                        "description": "State level container for all rsvp session explicit route object    parameters",
                                        "readOnly": true,
                                        "type": "object",
                                        "properties": {
                                          "link-address": {
                                            "description": "Explict route object ip address",
                                            "readOnly": true,
                                            "oneOf": [
                                              {
                                                "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                                "type": "string"
                                              },
                                              {
                                                "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                                "type": "string"
                                              }
                                            ],
                                            "mandatory": false
                                          },
                                          "link-type": {
                                            "description": "Explict route object Path type",
                                            "readOnly": true,
                                            "enum": [
                                              "loose",
                                              "strict"
                                            ],
                                            "mandatory": false
                                          }
                                        }
                                      }
                                    },
                                    "keyFields": [
                                      "link-address"
                                    ]
                                  }
                                },
                                "constrained-shortest-path": {
                                  "description": "Top level container for constrained shortest path",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State level container for all rsvp session received explicit route    object parameters",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "cspf-state": {
                                          "description": "Status of the constrained shortest path factor",
                                          "readOnly": true,
                                          "enum": [
                                            "disable",
                                            "enable"
                                          ],
                                          "mandatory": false
                                        },
                                        "lsp-reoptimization-state": {
                                          "description": "Status of the cspf lsp reoptimization",
                                          "readOnly": true,
                                          "enum": [
                                            "disable",
                                            "enable"
                                          ],
                                          "mandatory": false
                                        },
                                        "lsp-reoptimization-timer": {
                                          "description": "Value of the cspf lsp reoptimization timer",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        },
                                        "cspf-client": {
                                          "description": "Client of the cspf (ospf/isis)",
                                          "readOnly": true,
                                          "enum": [
                                            "none",
                                            "ospf",
                                            "isis"
                                          ],
                                          "mandatory": false
                                        }
                                      }
                                    }
                                  }
                                },
                                "fast-reroute": {
                                  "description": "Top level container for Fast Reroute",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State level container for all rsvp session fast reroute",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "lsp-protection": {
                                          "description": "Type of the lsp protection(one-to-one/facility)",
                                          "readOnly": true,
                                          "enum": [
                                            "one-to-one",
                                            "facility"
                                          ],
                                          "mandatory": false
                                        },
                                        "bypass-trunk-name": {
                                          "description": "Name of the bypass facilty trunk",
                                          "readOnly": true,
                                          "minLength": 1,
                                          "maxLength": 1965,
                                          "pattern": "[^?' =,>|]+",
                                          "type": "string",
                                          "mandatory": false
                                        },
                                        "merge-point-address": {
                                          "description": "rsvp session merge point address",
                                          "readOnly": true,
                                          "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                          "type": "string",
                                          "mandatory": false
                                        },
                                        "merge-point-label": {
                                          "description": "rsvp session merge point label",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        }
                                      }
                                    }
                                  }
                                },
                                "upstream-downstream-state": {
                                  "description": "Top level container for rsvp upstream and downsteam",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State level container for all rsvp session upstream and downsteam",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "upstream-ip-address": {
                                          "description": "Ip address of the upstream interface",
                                          "readOnly": true,
                                          "oneOf": [
                                            {
                                              "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                              "type": "string"
                                            },
                                            {
                                              "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                              "type": "string"
                                            }
                                          ],
                                          "mandatory": false
                                        },
                                        "upstream-interface-name": {
                                          "description": "Name of the upstream interface",
                                          "readOnly": true,
                                          "minLength": 1,
                                          "maxLength": 1965,
                                          "pattern": "[^?' =,>|]+",
                                          "type": "string",
                                          "mandatory": false
                                        },
                                        "downstream-ip-address": {
                                          "description": "Ip address of the downstream interface",
                                          "readOnly": true,
                                          "oneOf": [
                                            {
                                              "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                              "type": "string"
                                            },
                                            {
                                              "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                              "type": "string"
                                            }
                                          ],
                                          "mandatory": false
                                        },
                                        "downstream-interface-name": {
                                          "description": "Name of the downstream interface",
                                          "readOnly": true,
                                          "minLength": 1,
                                          "maxLength": 1965,
                                          "pattern": "[^?' =,>|]+",
                                          "type": "string",
                                          "mandatory": false
                                        }
                                      }
                                    }
                                  }
                                },
                                "traffic-flow-specification": {
                                  "description": "Top level container for rsvp specification in path and resv messages",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State level container for all rsvp session path and resv message    specification parameters",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "traffic-specification-rate": {
                                          "description": "Traffic specification rate in path message",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        },
                                        "filter-specification-rate": {
                                          "description": "Filter specification rate in reserve message",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        }
                                      }
                                    }
                                  }
                                },
                                "session-priority": {
                                  "description": "Top level container for session priorities",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State level container for rsvp session priorities",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "setup-priority": {
                                          "description": "rsvp trunk session setup priority",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 255,
                                          "mandatory": false
                                        },
                                        "hold-priority": {
                                          "description": "rsvp trunk session hold priority",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 255,
                                          "mandatory": false
                                        },
                                        "hop-limit": {
                                          "description": "rsvp trunk session hop limit",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 255,
                                          "mandatory": false
                                        },
                                        "bandwidth": {
                                          "description": "rsvp trunk session bandwidth",
                                          "readOnly": true,
                                          "minLength": 1,
                                          "maxLength": 1965,
                                          "pattern": "[^?' =,>|]+",
                                          "type": "string",
                                          "mandatory": false
                                        }
                                      }
                                    }
                                  }
                                },
                                "path-refresh-timers": {
                                  "description": "Top level container for session path refresh timers",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State level container for rsvp session path refresh timers",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "path-refresh-time": {
                                          "description": "Value of the path refresh",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        },
                                        "remaining-path-refresh-time": {
                                          "description": "Remaining value of the path refresh time",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        },
                                        "path-lifetime": {
                                          "description": "Value of the path lifetime",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        },
                                        "remaining-path-lifetime": {
                                          "description": "Remaining value of the path lifetime",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        }
                                      }
                                    }
                                  }
                                },
                                "reserve-refresh-timers": {
                                  "description": "Top level container for session reserve refresh timers",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State level container for all rsvp session reserve refresh timers",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "reserve-refresh-time": {
                                          "description": "Value of the reserve refresh",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        },
                                        "remaining-reserve-refresh-time": {
                                          "description": "Remaining value of the reserve refresh time",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        },
                                        "reserve-lifetime": {
                                          "description": "Value of the reserve lifetime",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        },
                                        "remaining-reserve-lifetime": {
                                          "description": "Remaining value of the reserve lifetime",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        }
                                      }
                                    }
                                  }
                                },
                                "retry-timers": {
                                  "description": "Top level container for retrytimers for the session",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State level container for all rsvp session retry timers",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "remaining-retry-time": {
                                          "description": "Value of the remaining retry time",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        },
                                        "next-retry-time": {
                                          "description": "Value of the next retry",
                                          "readOnly": true,
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "mandatory": false
                                        }
                                      }
                                    }
                                  }
                                },
                                "upstream-route-record-object": {
                                  "description": "Top level container for upstream route record object parameters",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State level container for all rsvp session upstream route record    object parameters",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "address": {
                                          "description": "Route record object ip address",
                                          "readOnly": true,
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                                "type": "string"
                                              },
                                              {
                                                "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                                "type": "string"
                                              }
                                            ],
                                            "mandatory": false
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "downstream-route-record-object": {
                                  "description": "Top level container for downstream route record object parameters",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State level container for all rsvp session downstream route record    object parameters",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "address": {
                                          "description": "Route record object ip address",
                                          "readOnly": true,
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                                "type": "string"
                                              },
                                              {
                                                "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                                "type": "string"
                                              }
                                            ],
                                            "mandatory": false
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "trunk-id": {
                                  "description": "Trunk identifier",
                                  "readOnly": true,
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 4294967295,
                                  "mandatory": false
                                },
                                "extended-tunnel-id": {
                                  "description": "Extended-tunnel identifier of the trunk",
                                  "readOnly": true,
                                  "oneOf": [
                                    {
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                      "type": "string"
                                    },
                                    {
                                      "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                      "type": "string"
                                    }
                                  ],
                                  "mandatory": false
                                },
                                "lsp-id": {
                                  "description": "Label switch path id",
                                  "readOnly": true,
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 65535,
                                  "mandatory": false
                                },
                                "session-frr-type": {
                                  "description": "Type of the rsvp session (main session/detour session)",
                                  "readOnly": true,
                                  "enum": [
                                    "main",
                                    "detour"
                                  ],
                                  "mandatory": false
                                },
                                "ingress": {
                                  "description": "Source address of the trunk",
                                  "readOnly": true,
                                  "oneOf": [
                                    {
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                      "type": "string"
                                    },
                                    {
                                      "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                      "type": "string"
                                    }
                                  ],
                                  "mandatory": false
                                },
                                "egress": {
                                  "description": "Egress endpoint address for the trunk",
                                  "readOnly": true,
                                  "oneOf": [
                                    {
                                      "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                                      "type": "string"
                                    },
                                    {
                                      "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                                      "type": "string"
                                    }
                                  ],
                                  "mandatory": false
                                },
                                "trunk-session-type": {
                                  "description": "Type of the session is either primary or secondary",
                                  "readOnly": true,
                                  "enum": [
                                    "secondary",
                                    "primary"
                                  ],
                                  "mandatory": false
                                },
                                "session-name": {
                                  "description": "Name of the session",
                                  "readOnly": true,
                                  "minLength": 1,
                                  "maxLength": 1965,
                                  "pattern": "[^?' =,>|]+",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "session-role": {
                                  "description": "rsvp trunk session role",
                                  "readOnly": true,
                                  "enum": [
                                    "none",
                                    "ingress",
                                    "transit",
                                    "egress",
                                    "non-ingress"
                                  ],
                                  "mandatory": false
                                },
                                "is-pseudo-primary": {
                                  "description": "Pseudo primary is in use or not",
                                  "readOnly": true,
                                  "enum": [
                                    "no",
                                    "yes"
                                  ],
                                  "mandatory": false
                                },
                                "lsp-state": {
                                  "description": "Status of the Label Switch Path",
                                  "readOnly": true,
                                  "minLength": 1,
                                  "maxLength": 1965,
                                  "pattern": "[^?' =,>|]+",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "fsm-state": {
                                  "description": "Status of the Finite State Machine",
                                  "readOnly": true,
                                  "minLength": 1,
                                  "maxLength": 1965,
                                  "pattern": "[^?' =,>|]+",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "transit-downstream-fsm-state": {
                                  "description": "Status of the Transit Downstream Finite State Machine",
                                  "readOnly": true,
                                  "minLength": 1,
                                  "maxLength": 1965,
                                  "pattern": "[^?' =,>|]+",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "establishment-time": {
                                  "description": "Establishment Time of the session",
                                  "readOnly": true,
                                  "pattern": "[^?'=,>|]*",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "revert-hold-timer": {
                                  "description": "Revert Hold timer of the session",
                                  "readOnly": true,
                                  "enum": [
                                    "no",
                                    "yes"
                                  ],
                                  "mandatory": false
                                },
                                "remaining-revert-time": {
                                  "description": "Remaining Time of the session (due to expire in seconds)",
                                  "readOnly": true,
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 4294967295,
                                  "mandatory": false
                                },
                                "session-filter-style": {
                                  "description": "rsvp trunk session style",
                                  "readOnly": true,
                                  "enum": [
                                    "undefined",
                                    "fixed",
                                    "shared-explicit"
                                  ],
                                  "mandatory": false
                                },
                                "in-label": {
                                  "description": "rsvp trunk session in label",
                                  "readOnly": true,
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 4294967295,
                                  "mandatory": false
                                },
                                "out-label": {
                                  "description": "rsvp trunk session out label",
                                  "readOnly": true,
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 4294967295,
                                  "mandatory": false
                                },
                                "bypass-out-label": {
                                  "description": "rsvp bypass trunk session out label",
                                  "readOnly": true,
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 4294967295,
                                  "mandatory": false
                                },
                                "bypass-out-interface": {
                                  "description": "rsvp bypass trunk output interface",
                                  "readOnly": true,
                                  "minLength": 1,
                                  "maxLength": 1965,
                                  "pattern": "[^?' =,>|]+",
                                  "type": "string",
                                  "mandatory": false
                                },
                                "gmpls-label-type": {
                                  "description": "rsvp trunk session tech type",
                                  "readOnly": true,
                                  "enum": [
                                    "packet",
                                    "pbb-te",
                                    "otn-odh",
                                    "otn-och",
                                    "sdh-sonet",
                                    "port-wave-length",
                                    "freedom",
                                    "sonet",
                                    "sdh",
                                    "waveband",
                                    "time-division-multiplex",
                                    "lambda-switch-capable",
                                    "fiber-switch-capable",
                                    "ethernet-vpn"
                                  ],
                                  "mandatory": false
                                },
                                "qos-traffic-type": {
                                  "description": "rsvp session traffic",
                                  "readOnly": true,
                                  "enum": [
                                    "undefined",
                                    "controlled-load",
                                    "guaranteed"
                                  ],
                                  "mandatory": false
                                },
                                "minimum-path-mtu": {
                                  "description": "rsvp session traffic",
                                  "readOnly": true,
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 4294967295,
                                  "mandatory": false
                                }
                              }
                            }
                          },
                          "keyFields": [
                            "session-name"
                          ]
                        }
                      }
                    }
                  }
                },
                "keyFields": [
                  "trunk-id",
                  "extended-tunnel-id",
                  "egress"
                ]
              }
            }
          }
        },
        "interfaces": {
          "description": "Container for RSVP interface",
          "readOnly": false,
          "type": "object",
          "properties": {
            "interface": {
              "description": "Top level list for RSVP interface",
              "readOnly": false,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Reference to interface name",
                    "readOnly": false,
                    "path": "../config/name",
                    "type": "string",
                    "mandatory": false
                  },
                  "config": {
                    "description": "configuration container for rsvp interface",
                    "readOnly": false,
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Reference to interface name",
                        "readOnly": false,
                        "path": "/ipi-interface:interfaces/ipi-interface:interface/ipi-interface:name",
                        "type": "string",
                        "mandatory": false
                      },
                      "enable-rsvp": {
                        "description": "Use this attribute to enable control adjacency to send and receive RSVP-TE control messages for MPLS and GMPLS",
                        "readOnly": false,
                        "type": "array",
                        "items": {
                          "type": "null"
                        },
                        "maxItems": 1,
                        "mandatory": false
                      },
                      "enable-iana-hello-config": {
                        "description": "Enable the exchange of non IANA specific Hello messages",
                        "readOnly": false,
                        "type": "array",
                        "items": {
                          "type": "null"
                        },
                        "maxItems": 1,
                        "mandatory": false
                      }
                    }
                  },
                  "state": {
                    "description": "state parameters for RSVP interface",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Reference to interface name",
                        "readOnly": true,
                        "path": "/ipi-interface:interfaces/ipi-interface:interface/ipi-interface:name",
                        "type": "string",
                        "mandatory": false
                      },
                      "enable-rsvp": {
                        "description": "Use this attribute to enable control adjacency to send and receive RSVP-TE control messages for MPLS and GMPLS",
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "type": "null"
                        },
                        "maxItems": 1,
                        "mandatory": false
                      },
                      "enable-iana-hello-config": {
                        "description": "Enable the exchange of non IANA specific Hello messages",
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "type": "null"
                        },
                        "maxItems": 1,
                        "mandatory": false
                      },
                      "selected-ipv4-address": {
                        "description": "configured IPV4 addresss on RSVP enabled interface",
                        "readOnly": true,
                        "pattern": "(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?",
                        "type": "string",
                        "mandatory": false
                      },
                      "selected-ipv6-address": {
                        "description": "configured IPV6 addresss on RSVP enabled interface",
                        "readOnly": true,
                        "pattern": "(((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?)|((([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(%.+)?)",
                        "type": "string",
                        "mandatory": false
                      },
                      "interface-type": {
                        "description": "Type of the interface like Ethernet, ATM or Frame Relay",
                        "readOnly": true,
                        "enum": [
                          "unknown",
                          "ethernet",
                          "SVI",
                          "AGG",
                          "frame-relay",
                          "atm"
                        ],
                        "mandatory": false
                      },
                      "interface-index": {
                        "description": "value of the interface index",
                        "readOnly": true,
                        "type": "number",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "mandatory": false
                      },
                      "rsvp-status": {
                        "description": "status of the RSVP interface (enable/disable)",
                        "readOnly": true,
                        "enum": [
                          "disable",
                          "enable"
                        ],
                        "mandatory": false
                      },
                      "bundle-buffer-size": {
                        "description": "Size of the bundle message consists of several standard RSVP messages that are grouped into a single RSVP message.",
                        "readOnly": true,
                        "type": "number",
                        "minimum": 0,
                        "maximum": 65535,
                        "mandatory": false
                      },
                      "epoch": {
                        "description": "Current Epoch Value",
                        "readOnly": true,
                        "type": "number",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "mandatory": false
                      },
                      "administrative-group-name": {
                        "description": "Name of the Administrative Group. Administrative Group name should be configured before",
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "maxLength": 1965,
                          "pattern": "[^?' =,>|]+",
                          "type": "string",
                          "mandatory": false
                        }
                      }
                    }
                  },
                  "refresh-reduction": {
                    "description": "configuration container for rsvp interface refresh reduction",
                    "readOnly": false,
                    "type": "object",
                    "properties": {
                      "config": {
                        "description": "configuration container for rsvp interface refresh reduction",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "enable-message-ack": {
                            "description": "Use this attribute to enable message acknowledgement for all messages being sent to neighbors that are known to support refresh reduction.",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "null"
                            },
                            "maxItems": 1,
                            "mandatory": false
                          },
                          "disable-refresh-reduction": {
                            "description": "Use this attribute to enable refresh reduction capability advertisement for all interfaces",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "null"
                            },
                            "maxItems": 1,
                            "mandatory": false
                          },
                          "ack-wait-timeout": {
                            "description": "Use this attribute to configure the acknowledgement wait timeout for all RSVP-TE neighbors",
                            "readOnly": false,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          },
                          "refresh-time": {
                            "description": "Use this attribute to configure RSVP refresh interval timer. The timer specifies the interval after which Path and/ or Reservation Request (Resv) messages will be sent out.The refresh time and keep multiplier are two interrelated timing parameters used to calculate the valid Reservation Lifetime for an LSP. Refresh time regulates the interval between Refresh messages which include Path and Reservation Request (Resv) messages. Refresh messages are sent periodically so that reservation does not timeout in the neighboring nodes. Each sender and receiver host sends Path and Resv messages, downstream and upstream respectively, along the paths.",
                            "readOnly": false,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          },
                          "keep-multiplier": {
                            "description": "Use this attribute to configure the constant to be used to calculate a valid reservation lifetime for a Labeled Switched Path (LSP).The refresh time and keep multiplier are two interrelated timing parameters used to calculate the valid reservation lifetime for an LSP. The router sends refresh messages periodically so that the neighbors do not timeout",
                            "readOnly": false,
                            "minimum": 1,
                            "maximum": 255,
                            "type": "number",
                            "mandatory": false
                          }
                        }
                      },
                      "state": {
                        "description": "state parameters for rsvp interface refresh-reduction",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "enable-message-ack": {
                            "description": "Use this attribute to enable message acknowledgement for all messages being sent to neighbors that are known to support refresh reduction.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "null"
                            },
                            "maxItems": 1,
                            "mandatory": false
                          },
                          "disable-refresh-reduction": {
                            "description": "Use this attribute to enable refresh reduction capability advertisement for all interfaces",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "null"
                            },
                            "maxItems": 1,
                            "mandatory": false
                          },
                          "ack-wait-timeout": {
                            "description": "Use this attribute to configure the acknowledgement wait timeout for all RSVP-TE neighbors",
                            "readOnly": true,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          },
                          "refresh-time": {
                            "description": "Use this attribute to configure RSVP refresh interval timer. The timer specifies the interval after which Path and/ or Reservation Request (Resv) messages will be sent out.The refresh time and keep multiplier are two interrelated timing parameters used to calculate the valid Reservation Lifetime for an LSP. Refresh time regulates the interval between Refresh messages which include Path and Reservation Request (Resv) messages. Refresh messages are sent periodically so that reservation does not timeout in the neighboring nodes. Each sender and receiver host sends Path and Resv messages, downstream and upstream respectively, along the paths.",
                            "readOnly": true,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          },
                          "keep-multiplier": {
                            "description": "Use this attribute to configure the constant to be used to calculate a valid reservation lifetime for a Labeled Switched Path (LSP).The refresh time and keep multiplier are two interrelated timing parameters used to calculate the valid reservation lifetime for an LSP. The router sends refresh messages periodically so that the neighbors do not timeout",
                            "readOnly": true,
                            "minimum": 1,
                            "maximum": 255,
                            "type": "number",
                            "mandatory": false
                          }
                        }
                      }
                    }
                  },
                  "hellos": {
                    "description": "container for hello",
                    "readOnly": false,
                    "type": "object",
                    "properties": {
                      "config": {
                        "description": "configuration container for hello messages",
                        "readOnly": false,
                        "type": "object",
                        "properties": {
                          "enable-hello-receipt": {
                            "description": "Use this attribute to enable the receipt of Hello messages from peers.",
                            "readOnly": false,
                            "type": "array",
                            "items": {
                              "type": "null"
                            },
                            "maxItems": 1,
                            "mandatory": false
                          },
                          "hello-interval": {
                            "description": "Use this attribute to set an interval between Hello packets.Used as a global command, this value is over-ridden by the hello-interval set on the interface (see rsvp hello-interval).For optimum performance, set this value no more than one-third of the hello-timeout value.",
                            "readOnly": false,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          },
                          "hello-timeout": {
                            "description": "Timeout for clearing up all sessions shared with a neighbor.If an LSR has not received a Hello message from a peer within the number of seconds set with this command, all sessions shared with this peer are reset. The hello-timeout determines how long an RSVP node waits for a hello message before declaring a neighbor to be down.",
                            "readOnly": false,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          }
                        }
                      },
                      "state": {
                        "description": "Operational container for hello messages",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "enable-hello-receipt": {
                            "description": "Use this attribute to enable the receipt of Hello messages from peers.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "null"
                            },
                            "maxItems": 1,
                            "mandatory": false
                          },
                          "hello-interval": {
                            "description": "Use this attribute to set an interval between Hello packets.Used as a global command, this value is over-ridden by the hello-interval set on the interface (see rsvp hello-interval).For optimum performance, set this value no more than one-third of the hello-timeout value.",
                            "readOnly": true,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          },
                          "hello-timeout": {
                            "description": "Timeout for clearing up all sessions shared with a neighbor.If an LSR has not received a Hello message from a peer within the number of seconds set with this command, all sessions shared with this peer are reset. The hello-timeout determines how long an RSVP node waits for a hello message before declaring a neighbor to be down.",
                            "readOnly": true,
                            "minimum": 1,
                            "maximum": 65535,
                            "type": "number",
                            "mandatory": false
                          }
                        }
                      }
                    }
                  }
                },
                "keyFields": [
                  "name"
                ]
              }
            }
          }
        }
      }
    }
  }
}